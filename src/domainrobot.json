{
  "swagger" : "2.0",
  "info" : {
    "description" : "Domainrobot JSON API for managing: Domains, SSL\n\t\t\t\t\t\t\t\t\t\t\tCertificates, DNS and\n\t\t\t\t\t\t\t\t\t\t\tmuch more.",
    "version" : "v1",
    "title" : "Domainrobot JSON API"
  },
  "host" : "https://api.autodns.com",
  "basePath" : "/v1",
  "tags" : [ {
    "name" : "Certificate Tasks"
  }, {
    "name" : "Contact Tasks"
  }, {
    "name" : "Document Tasks"
  }, {
    "name" : "Domain Tasks"
  }, {
    "name" : "Job Tasks"
  }, {
    "name" : "Poll Tasks"
  }, {
    "name" : "Redirect Tasks"
  }, {
    "name" : "Session Tasks"
  }, {
    "name" : "SslContact Tasks"
  }, {
    "name" : "Zone Tasks"
  } ],
  "paths" : {
    "/certificate" : {
      "post" : {
        "tags" : [ "Certificate Tasks" ],
        "summary" : "Create Certificate",
        "description" : "Order a new certificate. The operation is asynchronous and creates a job.",
        "operationId" : "certificateCreate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "certificate",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Certificate",
            "originalRef" : "Certificate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseDataObjectJob",
              "originalRef" : "JsonResponseDataObjectJob"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseDataObjectJob",
              "originalRef" : "JsonResponseDataObjectJob"
            }
          }
        }
      }
    },
    "/certificate/_search" : {
      "post" : {
        "tags" : [ "Certificate Tasks" ],
        "summary" : "List Certificates",
        "description" : "Inquire a list of certificates with certain details. The data to be displayed can be extended per url paremeter.",
        "operationId" : "certificateList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "query",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/QueryBuilder",
            "originalRef" : "QueryBuilder"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseData",
              "originalRef" : "JsonResponseData"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseData",
              "originalRef" : "JsonResponseData"
            }
          }
        }
      }
    },
    "/certificate/prepareOrder" : {
      "post" : {
        "tags" : [ "Certificate Tasks" ],
        "summary" : "Prepare certificate order",
        "description" : "Prepare a certificate order. This call checks the csr and generates authentication data required for further calls like order, renew, reissue, revoke, delete.",
        "operationId" : "certificatePrepareOrder",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "certificateData",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CertificateData",
            "originalRef" : "CertificateData"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseData",
              "originalRef" : "JsonResponseData"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseData",
              "originalRef" : "JsonResponseData"
            }
          }
        }
      }
    },
    "/certificate/{id}" : {
      "get" : {
        "tags" : [ "Certificate Tasks" ],
        "summary" : "Get Certificate",
        "description" : "Inquire the data for the specified certificate.",
        "operationId" : "certificateinfo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseData",
              "originalRef" : "JsonResponseData"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseData",
              "originalRef" : "JsonResponseData"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Certificate Tasks" ],
        "summary" : "Reissue Certificate",
        "description" : "Reissue an existing certificate. The operation is asynchronous and creates a job.",
        "operationId" : "certificateReissue",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "certificate",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Certificate",
            "originalRef" : "Certificate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseDataObjectJob",
              "originalRef" : "JsonResponseDataObjectJob"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseDataObjectJob",
              "originalRef" : "JsonResponseDataObjectJob"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Certificate Tasks" ],
        "summary" : "Delete Certificate",
        "description" : "Delete an existing certificate. The operation is asynchronous and creates a job.",
        "operationId" : "certificateDelete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseDataObjectJob",
              "originalRef" : "JsonResponseDataObjectJob"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseDataObjectJob",
              "originalRef" : "JsonResponseDataObjectJob"
            }
          }
        }
      }
    },
    "/certificate/{id}/comment" : {
      "put" : {
        "tags" : [ "Certificate Tasks" ],
        "summary" : "Update Certificate Comment",
        "description" : "Update a comment for an existing certificate.",
        "operationId" : "certificateCommentUpdate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "certificate",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Certificate",
            "originalRef" : "Certificate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseData",
              "originalRef" : "JsonResponseData"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseData",
              "originalRef" : "JsonResponseData"
            }
          }
        }
      }
    },
    "/certificate/{id}/renew" : {
      "put" : {
        "tags" : [ "Certificate Tasks" ],
        "summary" : "Renew Certificate",
        "description" : "Renew an existing certificate. The operation is asynchronous and creates a job.",
        "operationId" : "certificateRenew",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "certificate",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Certificate",
            "originalRef" : "Certificate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseData",
              "originalRef" : "JsonResponseData"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseData",
              "originalRef" : "JsonResponseData"
            }
          }
        }
      }
    },
    "/certificate/{id}/revoke" : {
      "delete" : {
        "tags" : [ "Certificate Tasks" ],
        "summary" : "Revoke Certificate",
        "description" : "Revoke an existing certificate. The operation is asynchronous and creates a job.",
        "operationId" : "certificateRevoke",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "certificate",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Certificate",
            "originalRef" : "Certificate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseData",
              "originalRef" : "JsonResponseData"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseData",
              "originalRef" : "JsonResponseData"
            }
          }
        }
      }
    },
    "/contact" : {
      "post" : {
        "tags" : [ "Contact Tasks" ],
        "summary" : "Create Contact",
        "description" : "Create a new domain contact.",
        "operationId" : "contactCreate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "contact",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Contact",
            "originalRef" : "Contact"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseDataContact",
              "originalRef" : "JsonResponseDataContact"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseDataContact",
              "originalRef" : "JsonResponseDataContact"
            }
          }
        }
      }
    },
    "/contact/_search" : {
      "post" : {
        "tags" : [ "Contact Tasks" ],
        "summary" : "List Contact",
        "description" : "Inquire a list of contacts with certain details. The data to be displayed can be extended per url paremeter.",
        "operationId" : "contactList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "query",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Query",
            "originalRef" : "Query"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseDataContact",
              "originalRef" : "JsonResponseDataContact"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseDataContact",
              "originalRef" : "JsonResponseDataContact"
            }
          }
        }
      }
    },
    "/contact/{id}" : {
      "get" : {
        "tags" : [ "Contact Tasks" ],
        "summary" : "Get Contact",
        "description" : "Inquire the data for the specified domain contact.",
        "operationId" : "contactInfo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseDataContact",
              "originalRef" : "JsonResponseDataContact"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseDataContact",
              "originalRef" : "JsonResponseDataContact"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Contact Tasks" ],
        "summary" : "Update Contact",
        "description" : "Update an existing domain contact.",
        "operationId" : "contactUpdate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "contact",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Contact",
            "originalRef" : "Contact"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseDataContact",
              "originalRef" : "JsonResponseDataContact"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseDataContact",
              "originalRef" : "JsonResponseDataContact"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Contact Tasks" ],
        "summary" : "Delete Contact",
        "description" : "Delete an existing domain contact.",
        "operationId" : "contactDelete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseDataJsonNoData",
              "originalRef" : "JsonResponseDataJsonNoData"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseDataJsonNoData",
              "originalRef" : "JsonResponseDataJsonNoData"
            }
          }
        }
      }
    },
    "/document/{alias}" : {
      "get" : {
        "tags" : [ "Document Tasks" ],
        "summary" : "Get Document",
        "description" : "Fetch the document for the given alias. The alias can be an ID, UUID or a script name like pricelist.xml.",
        "operationId" : "documentInfoWithAlias",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "alias",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseDataBasicDocument",
              "originalRef" : "JsonResponseDataBasicDocument"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseDataBasicDocument",
              "originalRef" : "JsonResponseDataBasicDocument"
            }
          }
        }
      }
    },
    "/domain" : {
      "post" : {
        "tags" : [ "Domain Tasks" ],
        "summary" : "Create Domain",
        "description" : "Order a new domain. The operation is asynchronous and creates a job.",
        "operationId" : "domainCreate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "domain",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Domain",
            "originalRef" : "Domain"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseData",
              "originalRef" : "JsonResponseData"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseData",
              "originalRef" : "JsonResponseData"
            }
          }
        }
      }
    },
    "/domain/_search" : {
      "post" : {
        "tags" : [ "Domain Tasks" ],
        "summary" : "List Domains",
        "description" : "Inquire a list of domains with certain details. The data to be displayed can be extended per url paremeter.",
        "operationId" : "domainList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "query",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/QueryBuilder",
            "originalRef" : "QueryBuilder"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseData",
              "originalRef" : "JsonResponseData"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseData",
              "originalRef" : "JsonResponseData"
            }
          }
        }
      }
    },
    "/domain/buy" : {
      "post" : {
        "tags" : [ "Domain Tasks" ],
        "summary" : "Buy a domain from the premium market",
        "description" : "Buy a domain from the premium market. The operation is asynchronous and creates a job.",
        "operationId" : "domainBuy",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "domain",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Domain",
            "originalRef" : "Domain"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseData",
              "originalRef" : "JsonResponseData"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseData",
              "originalRef" : "JsonResponseData"
            }
          }
        }
      }
    },
    "/domain/cancelation/_search" : {
      "post" : {
        "tags" : [ "Domain Tasks" ],
        "summary" : "List cancelation Domains",
        "description" : "Inquire a list of cancelations with certain details. The data to be displayed can be extended per url paremeter.",
        "operationId" : "domainCancelationList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "query",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/QueryBuilder",
            "originalRef" : "QueryBuilder"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseData",
              "originalRef" : "JsonResponseData"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseData",
              "originalRef" : "JsonResponseData"
            }
          }
        }
      }
    },
    "/domain/restore/_search" : {
      "post" : {
        "tags" : [ "Domain Tasks" ],
        "summary" : "List restore Domains",
        "description" : "Inquire a list of restorable domains with certain details. The data to be displayed can be extended per url paremeter.",
        "operationId" : "domainRestoreList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "query",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/QueryBuilder",
            "originalRef" : "QueryBuilder"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseDataDomainRestore",
              "originalRef" : "JsonResponseDataDomainRestore"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseDataDomainRestore",
              "originalRef" : "JsonResponseDataDomainRestore"
            }
          }
        }
      }
    },
    "/domain/{name}" : {
      "get" : {
        "tags" : [ "Domain Tasks" ],
        "summary" : "Get Domain",
        "description" : "Fetch the data for the specified domain.",
        "operationId" : "domainInfo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseDataDomain",
              "originalRef" : "JsonResponseDataDomain"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseDataDomain",
              "originalRef" : "JsonResponseDataDomain"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Domain Tasks" ],
        "summary" : "Update Domain",
        "description" : "Update an existing domain. The operation is asynchronous and creates a job.",
        "operationId" : "domainUpdate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "domain",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Domain",
            "originalRef" : "Domain"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseData",
              "originalRef" : "JsonResponseData"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseData",
              "originalRef" : "JsonResponseData"
            }
          }
        }
      }
    },
    "/domain/{name}/_restore" : {
      "put" : {
        "tags" : [ "Domain Tasks" ],
        "summary" : "Restore Domain",
        "description" : "Restore an existing domain.",
        "operationId" : "domainRestore",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "domain",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Domain",
            "originalRef" : "Domain"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseDataDomain",
              "originalRef" : "JsonResponseDataDomain"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseDataDomain",
              "originalRef" : "JsonResponseDataDomain"
            }
          }
        }
      }
    },
    "/domain/{name}/authinfo1" : {
      "post" : {
        "tags" : [ "Domain Tasks" ],
        "summary" : "Create Domain Authinfo1",
        "description" : "Create an authinfo1 for the specified domain.",
        "operationId" : "domainAuthinfo1Create",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "domain",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Domain",
            "originalRef" : "Domain"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseData",
              "originalRef" : "JsonResponseData"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseData",
              "originalRef" : "JsonResponseData"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Domain Tasks" ],
        "summary" : "Delete DomainAuthinfo1",
        "description" : "Delete an existing authinfo1 for the specified domain.",
        "operationId" : "domainAuthinfo1Delete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseDataJsonNoData",
              "originalRef" : "JsonResponseDataJsonNoData"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseDataJsonNoData",
              "originalRef" : "JsonResponseDataJsonNoData"
            }
          }
        }
      }
    },
    "/domain/{name}/authinfo2" : {
      "post" : {
        "tags" : [ "Domain Tasks" ],
        "summary" : "Create Domain Authinfo2",
        "description" : "Create an authinfo2 for the specified domain.",
        "operationId" : "domainAuthinfo2Create",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "domain",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Domain",
            "originalRef" : "Domain"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseDataJsonNoData",
              "originalRef" : "JsonResponseDataJsonNoData"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseDataJsonNoData",
              "originalRef" : "JsonResponseDataJsonNoData"
            }
          }
        }
      }
    },
    "/domain/{name}/cancelation" : {
      "get" : {
        "tags" : [ "Domain Tasks" ],
        "summary" : "Get DomainCancelation",
        "description" : "Fetch the cancelation data for the specified domain.",
        "operationId" : "domainCancelationInfo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseDataDomainCancelation",
              "originalRef" : "JsonResponseDataDomainCancelation"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseDataDomainCancelation",
              "originalRef" : "JsonResponseDataDomainCancelation"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Domain Tasks" ],
        "summary" : "Create Domain Cancelation",
        "description" : "Create a cancelation for the specified domain.",
        "operationId" : "domainCancelationCreate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "domain",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DomainCancelation",
            "originalRef" : "DomainCancelation"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseData",
              "originalRef" : "JsonResponseData"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseData",
              "originalRef" : "JsonResponseData"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Domain Tasks" ],
        "summary" : "Update DomainCancelation",
        "description" : "Update an existing cancelation for the specified domain.",
        "operationId" : "domainCancelationUpdate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "domain",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Domain",
            "originalRef" : "Domain"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseData",
              "originalRef" : "JsonResponseData"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseData",
              "originalRef" : "JsonResponseData"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Domain Tasks" ],
        "summary" : "Delete DomainCancelation",
        "description" : "Delete an existing cancelation for the specified domain.",
        "operationId" : "domainCancelationDelete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseDataJsonNoData",
              "originalRef" : "JsonResponseDataJsonNoData"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseDataJsonNoData",
              "originalRef" : "JsonResponseDataJsonNoData"
            }
          }
        }
      }
    },
    "/domain/{name}/renew" : {
      "put" : {
        "tags" : [ "Domain Tasks" ],
        "summary" : "Renew Domain",
        "description" : "Renew an existing domain.",
        "operationId" : "domainRenew",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "domain",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Domain",
            "originalRef" : "Domain"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseData",
              "originalRef" : "JsonResponseData"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseData",
              "originalRef" : "JsonResponseData"
            }
          }
        }
      }
    },
    "/domain/{name}/transfer" : {
      "post" : {
        "tags" : [ "Domain Tasks" ],
        "summary" : "Transfer Domain",
        "description" : "Transfer a domain. The operation is asynchronous and creates a job.",
        "operationId" : "domainTransfer",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "domain",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Domain",
            "originalRef" : "Domain"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseDataDomain",
              "originalRef" : "JsonResponseDataDomain"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseDataDomain",
              "originalRef" : "JsonResponseDataDomain"
            }
          }
        }
      }
    },
    "/job/_search" : {
      "post" : {
        "tags" : [ "Job Tasks" ],
        "summary" : "List Jobs",
        "description" : "Inquire a list of jobs with certain details.",
        "operationId" : "jobList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "query",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/QueryBuilder",
            "originalRef" : "QueryBuilder"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseDataJob",
              "originalRef" : "JsonResponseDataJob"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseDataJob",
              "originalRef" : "JsonResponseDataJob"
            }
          }
        }
      }
    },
    "/job/history/_search" : {
      "post" : {
        "tags" : [ "Job Tasks" ],
        "summary" : "List history jobs",
        "description" : "Inquire a list of finished jobs with certain details.",
        "operationId" : "jobHistoryList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "query",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/QueryBuilder",
            "originalRef" : "QueryBuilder"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseDataJob",
              "originalRef" : "JsonResponseDataJob"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseDataJob",
              "originalRef" : "JsonResponseDataJob"
            }
          }
        }
      }
    },
    "/job/history/{id}" : {
      "get" : {
        "tags" : [ "Job Tasks" ],
        "summary" : "Get history job",
        "description" : "Inquire the data for the specified finished job.",
        "operationId" : "jobHistoryInfo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseData",
              "originalRef" : "JsonResponseData"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseData",
              "originalRef" : "JsonResponseData"
            }
          }
        }
      }
    },
    "/job/{id}" : {
      "get" : {
        "tags" : [ "Job Tasks" ],
        "summary" : "Get Job",
        "description" : "Inquire the data for the specified job.",
        "operationId" : "jobInfo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseDataJob",
              "originalRef" : "JsonResponseDataJob"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseDataJob",
              "originalRef" : "JsonResponseDataJob"
            }
          }
        }
      }
    },
    "/job/{id}/cancel" : {
      "put" : {
        "tags" : [ "Job Tasks" ],
        "summary" : "Cancel Job",
        "description" : "Cancel the specified job.",
        "operationId" : "jobCancel",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseData",
              "originalRef" : "JsonResponseData"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseData",
              "originalRef" : "JsonResponseData"
            }
          }
        }
      }
    },
    "/job/{id}/confirm" : {
      "put" : {
        "tags" : [ "Job Tasks" ],
        "summary" : "Confirm Job",
        "description" : "Confirm the specified job.",
        "operationId" : "jobConfirm",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseData",
              "originalRef" : "JsonResponseData"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseData",
              "originalRef" : "JsonResponseData"
            }
          }
        }
      }
    },
    "/job/{id}/reject" : {
      "put" : {
        "tags" : [ "Job Tasks" ],
        "summary" : "Reject Job",
        "description" : "Reject the specified job.",
        "operationId" : "jobReject",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseData",
              "originalRef" : "JsonResponseData"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseData",
              "originalRef" : "JsonResponseData"
            }
          }
        }
      }
    },
    "/login" : {
      "post" : {
        "tags" : [ "Session Tasks" ],
        "summary" : "Login",
        "description" : "Login and create a new session.",
        "operationId" : "login",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "user",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/User",
            "originalRef" : "User"
          }
        }, {
          "name" : "acl",
          "in" : "query",
          "description" : "Specifies whether the acls are returned in the response. The possible values are true or false.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "profiles",
          "in" : "query",
          "description" : "Specifies whether the user profile is returned in the response. The possible values are true or false.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "customer",
          "in" : "query",
          "description" : "Specifies whether the customer data is returned in the response. The possible values are true or false.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timeout",
          "in" : "query",
          "description" : "Defines the timeout of the session in minutes. Default is 10 minutes. The possible values are true or false.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseDataUser",
              "originalRef" : "JsonResponseDataUser"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseDataUser",
              "originalRef" : "JsonResponseDataUser"
            }
          }
        }
      }
    },
    "/logout" : {
      "get" : {
        "tags" : [ "Session Tasks" ],
        "summary" : "Logout",
        "description" : "Logout and delete the current session.",
        "operationId" : "logout",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseDataJsonNoData",
              "originalRef" : "JsonResponseDataJsonNoData"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseDataJsonNoData",
              "originalRef" : "JsonResponseDataJsonNoData"
            }
          }
        }
      }
    },
    "/poll" : {
      "get" : {
        "tags" : [ "Poll Tasks" ],
        "summary" : "Get PollMessage",
        "description" : "Fetch the latest poll message.",
        "operationId" : "pollInfo",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseDataPollMessage",
              "originalRef" : "JsonResponseDataPollMessage"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseDataPollMessage",
              "originalRef" : "JsonResponseDataPollMessage"
            }
          }
        }
      }
    },
    "/poll/{id}" : {
      "put" : {
        "tags" : [ "Poll Tasks" ],
        "summary" : "Confirm PollMessage",
        "description" : "Confirm the specified poll message",
        "operationId" : "pollConfirm",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseDataJsonNoData",
              "originalRef" : "JsonResponseDataJsonNoData"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseDataJsonNoData",
              "originalRef" : "JsonResponseDataJsonNoData"
            }
          }
        }
      }
    },
    "/redirect" : {
      "post" : {
        "tags" : [ "Redirect Tasks" ],
        "summary" : "Create Redirect",
        "description" : "Create a new redirect.",
        "operationId" : "redirectCreate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "redirect",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Redirect",
            "originalRef" : "Redirect"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseDataRedirect",
              "originalRef" : "JsonResponseDataRedirect"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseDataRedirect",
              "originalRef" : "JsonResponseDataRedirect"
            }
          }
        }
      }
    },
    "/redirect/_search" : {
      "post" : {
        "tags" : [ "Redirect Tasks" ],
        "summary" : "List Redirect",
        "description" : "Inquire a list of redirects with certain details. The data to be displayed can be extended per url paremeter.",
        "operationId" : "redirectList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "query",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/QueryBuilder",
            "originalRef" : "QueryBuilder"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseDataRedirect",
              "originalRef" : "JsonResponseDataRedirect"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseDataRedirect",
              "originalRef" : "JsonResponseDataRedirect"
            }
          }
        }
      }
    },
    "/redirect/{source}" : {
      "get" : {
        "tags" : [ "Redirect Tasks" ],
        "summary" : "Get Redirect",
        "description" : "Inquire the data for the specified redirect.",
        "operationId" : "redirectInfo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "source",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseDataRedirect",
              "originalRef" : "JsonResponseDataRedirect"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseDataRedirect",
              "originalRef" : "JsonResponseDataRedirect"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Redirect Tasks" ],
        "summary" : "Update Redirect",
        "description" : "Update an existing redirect.",
        "operationId" : "redirectUpdate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "source",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "redirect",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Redirect",
            "originalRef" : "Redirect"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseDataRedirect",
              "originalRef" : "JsonResponseDataRedirect"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseDataRedirect",
              "originalRef" : "JsonResponseDataRedirect"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Redirect Tasks" ],
        "summary" : "Delete Redirect",
        "description" : "Delete an existing redirect.",
        "operationId" : "redirectDelete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "source",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseDataJsonNoData",
              "originalRef" : "JsonResponseDataJsonNoData"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseDataJsonNoData",
              "originalRef" : "JsonResponseDataJsonNoData"
            }
          }
        }
      }
    },
    "/sslcontact" : {
      "post" : {
        "tags" : [ "SslContact Tasks" ],
        "summary" : "Create SslContact",
        "description" : "Create a new sslcontact.",
        "operationId" : "sslContactCreate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "sslcontact",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SslContact",
            "originalRef" : "SslContact"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseDataSslContact",
              "originalRef" : "JsonResponseDataSslContact"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseDataSslContact",
              "originalRef" : "JsonResponseDataSslContact"
            }
          }
        }
      }
    },
    "/sslcontact/_search" : {
      "post" : {
        "tags" : [ "SslContact Tasks" ],
        "summary" : "List SslContact",
        "description" : "Inquire a list of sslcontacts with certain details. The data to be displayed can be extended per url paremeter.",
        "operationId" : "sslContactList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "query",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Query",
            "originalRef" : "Query"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseDataSslContact",
              "originalRef" : "JsonResponseDataSslContact"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseDataSslContact",
              "originalRef" : "JsonResponseDataSslContact"
            }
          }
        }
      }
    },
    "/sslcontact/{id}" : {
      "get" : {
        "tags" : [ "SslContact Tasks" ],
        "summary" : "Get SslContact",
        "description" : "Inquire the data for the specified sslcontact.",
        "operationId" : "sslContactInfo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseDataSslContact",
              "originalRef" : "JsonResponseDataSslContact"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseDataSslContact",
              "originalRef" : "JsonResponseDataSslContact"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "SslContact Tasks" ],
        "summary" : "Update SslContact",
        "description" : "Update an existing sslcontact.",
        "operationId" : "sslContactUpdate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "sslcontact",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SslContact",
            "originalRef" : "SslContact"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseDataSslContact",
              "originalRef" : "JsonResponseDataSslContact"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseDataSslContact",
              "originalRef" : "JsonResponseDataSslContact"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "SslContact Tasks" ],
        "summary" : "Delete SslContact",
        "description" : "Delete an existing sslcontact.",
        "operationId" : "sslContactDelete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseDataJsonNoData",
              "originalRef" : "JsonResponseDataJsonNoData"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseDataJsonNoData",
              "originalRef" : "JsonResponseDataJsonNoData"
            }
          }
        }
      }
    },
    "/zone" : {
      "post" : {
        "tags" : [ "Zone Tasks" ],
        "summary" : "Create Zone",
        "description" : "Create a zone.",
        "operationId" : "zoneCreate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "zone",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Zone",
            "originalRef" : "Zone"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseDataZone",
              "originalRef" : "JsonResponseDataZone"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseDataZone",
              "originalRef" : "JsonResponseDataZone"
            }
          }
        }
      }
    },
    "/zone/_search" : {
      "post" : {
        "tags" : [ "Zone Tasks" ],
        "summary" : "List Zones",
        "description" : "Inquire a list of zones with certain details. The data to be displayed can be extended per url paremeter.",
        "operationId" : "zoneList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "query",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/QueryBuilder",
            "originalRef" : "QueryBuilder"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseDataZone",
              "originalRef" : "JsonResponseDataZone"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseDataZone",
              "originalRef" : "JsonResponseDataZone"
            }
          }
        }
      }
    },
    "/zone/{name}/{nameserver}" : {
      "get" : {
        "tags" : [ "Zone Tasks" ],
        "summary" : "Get Zone",
        "description" : "Fetch the data for the specified zone.",
        "operationId" : "zoneInfo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "nameserver",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseDataZone",
              "originalRef" : "JsonResponseDataZone"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseDataZone",
              "originalRef" : "JsonResponseDataZone"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Zone Tasks" ],
        "summary" : "Update Zone",
        "description" : "Update an existing zone.",
        "operationId" : "zoneUpdate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "nameserver",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "zone",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Zone",
            "originalRef" : "Zone"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseDataZone",
              "originalRef" : "JsonResponseDataZone"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseDataZone",
              "originalRef" : "JsonResponseDataZone"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Zone Tasks" ],
        "summary" : "Delete Zone",
        "description" : "Delete an existing zone.",
        "operationId" : "zoneDelete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "nameserver",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseDataJsonNoData",
              "originalRef" : "JsonResponseDataJsonNoData"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseDataJsonNoData",
              "originalRef" : "JsonResponseDataJsonNoData"
            }
          }
        }
      }
    },
    "/zone/{name}/{nameserver}/_comment" : {
      "put" : {
        "tags" : [ "Zone Tasks" ],
        "summary" : "Update Zone Comment",
        "description" : "Update an existing zone.",
        "operationId" : "zoneUpdateComment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "nameserver",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "zone",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Zone",
            "originalRef" : "Zone"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseDataZone",
              "originalRef" : "JsonResponseDataZone"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseDataZone",
              "originalRef" : "JsonResponseDataZone"
            }
          }
        }
      }
    },
    "/zone/{name}/{nameserver}/axfr" : {
      "get" : {
        "tags" : [ "Zone Tasks" ],
        "summary" : "Get Axfr",
        "description" : "Fetch the axfr data for the specified zone.",
        "operationId" : "zoneAxfr",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "nameserver",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseDataString",
              "originalRef" : "JsonResponseDataString"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseDataString",
              "originalRef" : "JsonResponseDataString"
            }
          }
        }
      }
    },
    "/zone/{name}/{nameserver}/transfer" : {
      "post" : {
        "tags" : [ "Zone Tasks" ],
        "summary" : "Transfer Zone",
        "description" : "Transfer the specified zone.",
        "operationId" : "zoneTransfer",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "nameserver",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "zone",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Zone",
            "originalRef" : "Zone"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonResponseDataZone",
              "originalRef" : "JsonResponseDataZone"
            },
            "responseSchema" : {
              "$ref" : "#/definitions/JsonResponseDataZone",
              "originalRef" : "JsonResponseDataZone"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "AuEligibilityIdTypeConstants" : {
      "type" : "string",
      "enum" : [ "ACN", "ABN", "VIC_BN", "NSW_BN", "SA", "BN", "NT_BN", "WA_BN", "TAS_BN", "ACT_BN", "QLD_BN", "TM", "OTHER" ]
    },
    "AuEligibilityTypeConstants" : {
      "type" : "string",
      "enum" : [ "COMPANY", "REGISTERED_BUSINESS", "SOLE_TRADER", "PARTNERSHIP", "TRADEMARK_OWNER", "PENDING_TM_OWNER", "CITIZEN_RESIDENT", "INCORPORATED_ASSOCIATION", "UNINCORPORATED_ASSOCIATION", "CLUB", "NON_PROFIT_ORGANISATION", "CHARITY", "TRADE_UNION", "INDUSTRY_BODY", "COMMERCIAL_STATUTORY_BODY", "POLITICAL_PARTY", "RELIGIOUS_CHURCH_GROUPS", "OTHER" ]
    },
    "AuRegistrantIdTypeConstants" : {
      "type" : "string",
      "enum" : [ "ACN", "ABN", "OTHER" ]
    },
    "AuthMethodConstants" : {
      "type" : "string",
      "enum" : [ "DNS", "EMAIL", "FILE", "ORG" ]
    },
    "AutoRenewStatusConstants" : {
      "type" : "string",
      "enum" : [ "TRUE", "FALSE", "ONCE" ]
    },
    "BasicDocument" : {
      "type" : "object",
      "required" : [ "uuid" ],
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Lorem Ipsum"
        },
        "comment" : {
          "type" : "string",
          "description" : "Lorem Ipsum"
        },
        "addon" : {
          "description" : "Lorem Ipsum",
          "$ref" : "#/definitions/Configuration",
          "originalRef" : "Configuration"
        },
        "type" : {
          "type" : "string",
          "description" : "Lorem Ipsum"
        },
        "mimeType" : {
          "type" : "string",
          "description" : "Lorem Ipsum"
        },
        "data" : {
          "type" : "string",
          "description" : "Lorem Ipsum"
        },
        "size" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Lorem Ipsum"
        },
        "name" : {
          "type" : "string",
          "description" : "Lorem Ipsum"
        },
        "uuid" : {
          "type" : "string",
          "description" : "Lorem Ipsum"
        },
        "alias" : {
          "type" : "string",
          "description" : "Lorem Ipsum"
        },
        "owner" : {
          "description" : "The owner of the object.",
          "$ref" : "#/definitions/User",
          "originalRef" : "User"
        },
        "updater" : {
          "description" : "The updating user of the object.",
          "$ref" : "#/definitions/User",
          "originalRef" : "User"
        }
      }
    },
    "CaCertificate" : {
      "type" : "object",
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Unique identifier of the object"
        },
        "caType" : {
          "type" : "string",
          "description" : "The type of the intermediate certificate."
        },
        "caCertificate" : {
          "type" : "string",
          "description" : "The plain intermediate certificate."
        }
      }
    },
    "CancelationStatusConstants" : {
      "type" : "string",
      "enum" : [ "DELETE", "DELETE_EXPIRE", "TRANSIT", "TRANSIT_EXPIRE", "PREACK", "PREACK_EXPIRE" ]
    },
    "CancelationTypeConstants" : {
      "type" : "string",
      "enum" : [ "DELETE", "TRANSIT", "PREACK" ]
    },
    "CertAuthentication" : {
      "type" : "object",
      "properties" : {
        "method" : {
          "description" : "The authentication method.",
          "$ref" : "#/definitions/AuthMethodConstants",
          "originalRef" : "AuthMethodConstants"
        },
        "dns" : {
          "type" : "string",
          "description" : "The dns entry for dns based authentication."
        },
        "fileName" : {
          "type" : "string",
          "description" : "The filename for file based authentication."
        },
        "fileContent" : {
          "type" : "string",
          "description" : "The content for file based authentication."
        },
        "approverEmails" : {
          "type" : "array",
          "description" : "The approver addresses for email based authentication.",
          "items" : {
            "type" : "string"
          }
        },
        "provisioning" : {
          "type" : "boolean",
          "description" : "Activates automatic provisioning of the zone for dns based authentication."
        }
      }
    },
    "Certificate" : {
      "type" : "object",
      "required" : [ "lifetime", "product", "software" ],
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Unique identifier of the object"
        },
        "owner" : {
          "description" : "The owner of the object.",
          "$ref" : "#/definitions/User",
          "originalRef" : "User"
        },
        "updater" : {
          "description" : "The updating user of the object.",
          "$ref" : "#/definitions/User",
          "originalRef" : "User"
        },
        "partnerOrderId" : {
          "type" : "string",
          "description" : "The order number of the related request"
        },
        "orderId" : {
          "type" : "string",
          "description" : "The unique certificate order number"
        },
        "adminContact" : {
          "description" : "The administrative contact",
          "$ref" : "#/definitions/SslContact",
          "originalRef" : "SslContact"
        },
        "technicalContact" : {
          "description" : "The technical contact",
          "$ref" : "#/definitions/SslContact",
          "originalRef" : "SslContact"
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the certificate"
        },
        "lifetime" : {
          "description" : "The certificate term in months",
          "$ref" : "#/definitions/TimePeriod",
          "originalRef" : "TimePeriod"
        },
        "software" : {
          "description" : "The webserver software in use, relevant values: 'II5' for Mircosoft, 'APACHE2' for Linux",
          "$ref" : "#/definitions/ServerSoftwareTypeConstants",
          "originalRef" : "ServerSoftwareTypeConstants"
        },
        "comment" : {
          "type" : "string",
          "description" : "A custom field."
        },
        "csr" : {
          "type" : "string",
          "description" : "CSR - Key (Certificate Signing Request)"
        },
        "server" : {
          "type" : "string",
          "description" : "The certificate"
        },
        "serialNumber" : {
          "type" : "string",
          "description" : "Serial number of the certificate"
        },
        "product" : {
          "type" : "string",
          "description" : "The ordered product"
        },
        "codeSigningType" : {
          "type" : "string",
          "description" : "The type of code signing"
        },
        "certificateType" : {
          "type" : "string",
          "description" : "The type of the certificate"
        },
        "sha" : {
          "type" : "string",
          "description" : "The signature hash algorithm which was used"
        },
        "expire" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date on which the certificate expires"
        },
        "subjectAlternativeNames" : {
          "type" : "array",
          "description" : "Subject Alternative Names (SANs)",
          "items" : {
            "$ref" : "#/definitions/SubjectAlternativeName",
            "originalRef" : "SubjectAlternativeName"
          }
        },
        "histories" : {
          "type" : "array",
          "description" : "The history of the certificate (old certificate versions)",
          "items" : {
            "$ref" : "#/definitions/CertificateHistory",
            "originalRef" : "CertificateHistory"
          }
        },
        "certificationAuthority" : {
          "type" : "array",
          "description" : "The authentication of the certificate",
          "items" : {
            "$ref" : "#/definitions/CaCertificate",
            "originalRef" : "CaCertificate"
          }
        },
        "password" : {
          "type" : "string",
          "description" : "The password that is to be used for the certificate download. Only for S/MIME!",
          "pattern" : "^[-a-zA-Z0-9 ]{8,32}$"
        },
        "firstname" : {
          "type" : "string",
          "description" : "First Name. Only for S/MIME!"
        },
        "lastname" : {
          "type" : "string",
          "description" : "Last Name. Only for S/MIME!"
        },
        "organizationUnitName" : {
          "type" : "string",
          "description" : "The organization unit. Only for S/MIME!"
        },
        "authentication" : {
          "description" : "The authentication of the certificate",
          "$ref" : "#/definitions/CertAuthentication",
          "originalRef" : "CertAuthentication"
        },
        "certificateTransparency" : {
          "type" : "boolean",
          "description" : "Activates the certificate transparency for a certificate. Default is \"True\"."
        },
        "certificateTransparencyPrivacy" : {
          "description" : "The privacy settings for certificate transparency. Default is \"Redacted\".",
          "$ref" : "#/definitions/CertificateTransparencyPrivacyConstants",
          "originalRef" : "CertificateTransparencyPrivacyConstants"
        },
        "domain" : {
          "type" : "string",
          "description" : "The domain, which the redirect belongs."
        },
        "hasCsr" : {
          "type" : "boolean",
          "description" : "States if a self created CSR is to be used for S/MIME. Default is false. Only for S/MIME!"
        },
        "idn" : {
          "type" : "string",
          "description" : "The IDN version of the URL of the target domain."
        }
      }
    },
    "CertificateData" : {
      "type" : "object",
      "properties" : {
        "plain" : {
          "type" : "string",
          "description" : "The plain csr."
        },
        "name" : {
          "type" : "string",
          "description" : "The common name."
        },
        "san" : {
          "type" : "array",
          "description" : "The subject alternative names, listed in the csr.",
          "items" : {
            "type" : "string"
          }
        },
        "history" : {
          "type" : "array",
          "description" : "The certificate history.",
          "items" : {
            "$ref" : "#/definitions/CertificateHistory",
            "originalRef" : "CertificateHistory"
          }
        },
        "keySize" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The size of the csr key."
        },
        "countryCode" : {
          "type" : "string",
          "description" : "The country code defined in the csr."
        },
        "challengePassword" : {
          "type" : "string",
          "description" : "The password defined in the csr."
        },
        "state" : {
          "type" : "string",
          "description" : "The state defined in the csr."
        },
        "city" : {
          "type" : "string",
          "description" : "The city defined in the csr."
        },
        "organization" : {
          "type" : "string",
          "description" : "The organization defined in the csr."
        },
        "organizationUnit" : {
          "type" : "string",
          "description" : "The organization unit defined in the csr."
        },
        "email" : {
          "type" : "string",
          "description" : "The email defined in the csr."
        },
        "product" : {
          "type" : "string",
          "description" : "The ssl product."
        },
        "authentication" : {
          "type" : "array",
          "description" : "The authentication data.",
          "items" : {
            "$ref" : "#/definitions/CertAuthentication",
            "originalRef" : "CertAuthentication"
          }
        },
        "algorithm" : {
          "description" : "The csr algorithm.",
          "$ref" : "#/definitions/CsrHashAlgorithmConstants",
          "originalRef" : "CsrHashAlgorithmConstants"
        },
        "signatureHashAlgorithm" : {
          "description" : "The signature hash algorithm.",
          "$ref" : "#/definitions/SignatureHashAlgorithmConstants",
          "originalRef" : "SignatureHashAlgorithmConstants"
        },
        "idn" : {
          "type" : "string",
          "description" : "The idn version of the common name."
        },
        "checkCaa" : {
          "type" : "boolean",
          "description" : "Activates the caa record check."
        }
      }
    },
    "CertificateHistory" : {
      "type" : "object",
      "properties" : {
        "serialNumber" : {
          "type" : "string",
          "description" : "The serialnumber of the certificate."
        },
        "revoked" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The revoked date of the certificate."
        }
      }
    },
    "CertificateTransparencyPrivacyConstants" : {
      "type" : "string",
      "enum" : [ "PUBLIC", "REDACTED" ]
    },
    "CiraCprConstants" : {
      "type" : "string",
      "enum" : [ "CCT", "RES", "CCO", "ABO", "TDM", "MAJ", "GOV", "LGR", "TRS", "PRT", "ASS", "TRD", "PLT", "EDU", "LAM", "HOP", "INB", "OMK" ]
    },
    "Configuration" : {
      "type" : "object"
    },
    "Contact" : {
      "type" : "object",
      "required" : [ "address", "city", "country", "lname", "pcode", "type" ],
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Unique identifier of the object"
        },
        "owner" : {
          "description" : "The owner of the object.",
          "$ref" : "#/definitions/User",
          "originalRef" : "User"
        },
        "updater" : {
          "description" : "The updating user of the object.",
          "$ref" : "#/definitions/User",
          "originalRef" : "User"
        },
        "alias" : {
          "type" : "string",
          "example" : "John-Doe-1",
          "description" : "The unique alias of the contact"
        },
        "type" : {
          "description" : "The type of the contact",
          "$ref" : "#/definitions/ContactTypeConstants",
          "originalRef" : "ContactTypeConstants"
        },
        "fname" : {
          "type" : "string",
          "example" : "John",
          "description" : "The first name of the contact"
        },
        "lname" : {
          "type" : "string",
          "example" : "Doe",
          "description" : "The last name of the contact"
        },
        "organization" : {
          "type" : "string",
          "example" : "Company",
          "description" : "The name of the organization"
        },
        "title" : {
          "type" : "string",
          "example" : "Dr.",
          "description" : "The title of the contact"
        },
        "address" : {
          "type" : "array",
          "description" : "The address of the contact.",
          "items" : {
            "type" : "string"
          },
          "maxItems" : 2147483647,
          "minItems" : 1
        },
        "pcode" : {
          "type" : "string",
          "example" : "12345",
          "description" : "The pcode of the contact"
        },
        "city" : {
          "type" : "string",
          "example" : "Anytown",
          "description" : "The city of the contact"
        },
        "country" : {
          "type" : "string",
          "example" : "DE",
          "description" : "The country of the contact",
          "x-custom-type" : "country"
        },
        "state" : {
          "type" : "string",
          "example" : "BY",
          "description" : "The local country state of the contact",
          "x-custom-type" : "state"
        },
        "phone" : {
          "type" : "string",
          "example" : "+49-123-12345",
          "description" : "The phone number of the contact",
          "x-custom-type" : "phone"
        },
        "fax" : {
          "type" : "string",
          "example" : "+49-123-12345",
          "description" : "The fax number of the contact",
          "x-custom-type" : "phone"
        },
        "email" : {
          "type" : "string",
          "example" : "john.doe@domain.com",
          "description" : "The email of the contact",
          "x-custom-type" : "email"
        },
        "protection" : {
          "description" : "The protection of the contact",
          "$ref" : "#/definitions/ContactProtectionConstants",
          "originalRef" : "ContactProtectionConstants"
        },
        "sip" : {
          "type" : "string",
          "description" : "The sip of the contact"
        },
        "remarks" : {
          "type" : "array",
          "description" : "The remarks of the contact",
          "items" : {
            "type" : "string"
          }
        },
        "nicRef" : {
          "type" : "array",
          "description" : "The nic references of the contact",
          "items" : {
            "$ref" : "#/definitions/ContactReference",
            "originalRef" : "ContactReference"
          }
        },
        "domainsafe" : {
          "type" : "boolean",
          "description" : "The nic references of the contact"
        },
        "confirmOwnerConsent" : {
          "type" : "boolean",
          "description" : "???"
        },
        "comment" : {
          "type" : "string",
          "description" : "The comment for the contact"
        },
        "verification" : {
          "description" : "The verification status of the contact",
          "$ref" : "#/definitions/GenericStatusConstants",
          "originalRef" : "GenericStatusConstants"
        },
        "extensions" : {
          "description" : "The contact extensions.",
          "$ref" : "#/definitions/ContactExtensions",
          "originalRef" : "ContactExtensions"
        }
      }
    },
    "ContactAeroExtensions" : {
      "type" : "object",
      "properties" : {
        "ensAuthId" : {
          "type" : "string",
          "description" : "Aero Authentication ID."
        },
        "ensKey" : {
          "type" : "string",
          "description" : "Aero ENS key."
        }
      }
    },
    "ContactAuExtensions" : {
      "type" : "object",
      "properties" : {
        "eligibilityId" : {
          "type" : "string",
          "description" : "The corresponding ID number for the eligibility name if applicable, if in doubt just use the same details as your Registrant ID."
        },
        "eligibilityIdType" : {
          "description" : "The type of Eligibility ID.",
          "$ref" : "#/definitions/AuEligibilityIdTypeConstants",
          "originalRef" : "AuEligibilityIdTypeConstants"
        },
        "eligibilityName" : {
          "type" : "string",
          "description" : "\tThis field is usually optional and whether it is required is determined by your policy reason for the domain registration, if in doubt just use the same details as your Registrant Name."
        },
        "eligibilityType" : {
          "description" : "The type of entity that the registrant is.",
          "$ref" : "#/definitions/AuEligibilityTypeConstants",
          "originalRef" : "AuEligibilityTypeConstants"
        },
        "policyReason" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Reason for eligibility."
        },
        "registrantId" : {
          "type" : "string",
          "description" : "Australian Business Number or Registered Business Number."
        },
        "registrantIdType" : {
          "description" : "Concerns the Registrant ID which you have selected in the Registrant ID form field.",
          "$ref" : "#/definitions/AuRegistrantIdTypeConstants",
          "originalRef" : "AuRegistrantIdTypeConstants"
        },
        "registrantName" : {
          "type" : "string",
          "description" : "The registrants name."
        }
      }
    },
    "ContactBankExtensions" : {
      "type" : "object",
      "properties" : {
        "ftldToken" : {
          "type" : "string",
          "description" : "The FTLD token."
        }
      }
    },
    "ContactBarcelonaExtensions" : {
      "type" : "object",
      "properties" : {
        "intededUse" : {
          "type" : "string",
          "description" : "The statement of intended use for the domain name."
        }
      }
    },
    "ContactBirthExtensions" : {
      "type" : "object",
      "properties" : {
        "country" : {
          "type" : "string",
          "description" : "The country.",
          "x-custom-type" : "country"
        },
        "day" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The day.",
          "x-custom-type" : "date"
        },
        "postalCode" : {
          "type" : "string",
          "description" : "The postalCode.",
          "x-custom-type" : "pcode"
        },
        "place" : {
          "type" : "string",
          "description" : "The place."
        }
      }
    },
    "ContactCaExtensions" : {
      "type" : "object",
      "properties" : {
        "cpr" : {
          "description" : "The cira cpr.",
          "$ref" : "#/definitions/CiraCprConstants",
          "originalRef" : "CiraCprConstants"
        },
        "agreementVersion" : {
          "type" : "number",
          "format" : "double",
          "description" : "The agreement version."
        },
        "originatingIp" : {
          "type" : "string",
          "description" : "The originating ip.",
          "x-custom-type" : "ip"
        },
        "officialRepresentative" : {
          "type" : "string",
          "description" : "The official representative."
        },
        "trusteePercentage" : {
          "type" : "number",
          "format" : "double",
          "description" : "The trustee percentage."
        }
      }
    },
    "ContactCatExtensions" : {
      "type" : "object",
      "properties" : {
        "intendedUse" : {
          "type" : "string",
          "description" : "The statement of intended use for the domain name."
        }
      }
    },
    "ContactExtensions" : {
      "type" : "object",
      "properties" : {
        "aero" : {
          "description" : "The .aero contact extensions.",
          "$ref" : "#/definitions/ContactAeroExtensions",
          "originalRef" : "ContactAeroExtensions"
        },
        "au" : {
          "description" : "The .au contact extensions.",
          "$ref" : "#/definitions/ContactAuExtensions",
          "originalRef" : "ContactAuExtensions"
        },
        "cat" : {
          "description" : "The .cat contact extensions.",
          "$ref" : "#/definitions/ContactCatExtensions",
          "originalRef" : "ContactCatExtensions"
        },
        "jobs" : {
          "description" : "The .jobs contact extensions.",
          "$ref" : "#/definitions/ContactJobsExtensions",
          "originalRef" : "ContactJobsExtensions"
        },
        "it" : {
          "description" : "The .it contact extensions.",
          "$ref" : "#/definitions/ContactItExtensions",
          "originalRef" : "ContactItExtensions"
        },
        "jp" : {
          "description" : "The .jp contact extensions.",
          "$ref" : "#/definitions/ContactJpExtensions",
          "originalRef" : "ContactJpExtensions"
        },
        "xxx" : {
          "description" : "The .xxx contact extensions.",
          "$ref" : "#/definitions/ContactXxxExtensions",
          "originalRef" : "ContactXxxExtensions"
        },
        "hk" : {
          "description" : "The .hk contact extensions.",
          "$ref" : "#/definitions/ContactHkExtensions",
          "originalRef" : "ContactHkExtensions"
        },
        "bank" : {
          "description" : "The .bank contact extensions.",
          "$ref" : "#/definitions/ContactBankExtensions",
          "originalRef" : "ContactBankExtensions"
        },
        "swiss" : {
          "description" : "The .swiss contact extensions.",
          "$ref" : "#/definitions/ContactSwissExtensions",
          "originalRef" : "ContactSwissExtensions"
        },
        "ru" : {
          "description" : "The .ru contact extensions.",
          "$ref" : "#/definitions/ContactRuExtensions",
          "originalRef" : "ContactRuExtensions"
        },
        "uk" : {
          "description" : "The .uk contact extensions.",
          "$ref" : "#/definitions/ContactUkExtensions",
          "originalRef" : "ContactUkExtensions"
        },
        "ca" : {
          "description" : "The .ca contact extensions.",
          "$ref" : "#/definitions/ContactCaExtensions",
          "originalRef" : "ContactCaExtensions"
        },
        "ro" : {
          "description" : "The .ro contact extensions.",
          "$ref" : "#/definitions/ContactRoExtensions",
          "originalRef" : "ContactRoExtensions"
        },
        "barcelona" : {
          "description" : "The .barcelona contact extensions.",
          "$ref" : "#/definitions/ContactBarcelonaExtensions",
          "originalRef" : "ContactBarcelonaExtensions"
        },
        "general" : {
          "description" : "The general contact extensions.",
          "$ref" : "#/definitions/ContactGeneralExtensions",
          "originalRef" : "ContactGeneralExtensions"
        },
        "nz" : {
          "description" : "The .nz contact extensions",
          "$ref" : "#/definitions/ContactNzExtensions",
          "originalRef" : "ContactNzExtensions"
        },
        "qualifiedLawyer" : {
          "description" : "The qualified lawyer contact extensions.",
          "$ref" : "#/definitions/ContactQualifiedLawyerExtensions",
          "originalRef" : "ContactQualifiedLawyerExtensions"
        },
        "sport" : {
          "description" : "The .sport contact extensions.",
          "$ref" : "#/definitions/ContactSportExtensions",
          "originalRef" : "ContactSportExtensions"
        },
        "luxe" : {
          "description" : "The .luxe contact extensions.",
          "$ref" : "#/definitions/ContactLuxeExtensions",
          "originalRef" : "ContactLuxeExtensions"
        }
      }
    },
    "ContactGeneralExtensions" : {
      "type" : "object",
      "properties" : {
        "birth" : {
          "description" : "The birth extensions.",
          "$ref" : "#/definitions/ContactBirthExtensions",
          "originalRef" : "ContactBirthExtensions"
        },
        "trademark" : {
          "description" : "The trademark extensions.",
          "$ref" : "#/definitions/ContactTrademarkExtensions",
          "originalRef" : "ContactTrademarkExtensions"
        },
        "identification" : {
          "description" : "The identification extensions.",
          "$ref" : "#/definitions/ContactIdentificationExtensions",
          "originalRef" : "ContactIdentificationExtensions"
        },
        "language" : {
          "description" : "The language.",
          "$ref" : "#/definitions/LanguageConstants",
          "originalRef" : "LanguageConstants"
        },
        "companyNumber" : {
          "type" : "string",
          "description" : "The company number."
        },
        "gender" : {
          "description" : "The gender.",
          "$ref" : "#/definitions/GenderConstants",
          "originalRef" : "GenderConstants"
        },
        "vatNumber" : {
          "type" : "string",
          "description" : "The vatnumber."
        },
        "mobilePhone" : {
          "type" : "string",
          "description" : "The mobile phonenumber.",
          "x-custom-type" : "phone"
        }
      }
    },
    "ContactHkExtensions" : {
      "type" : "object",
      "properties" : {
        "documentType" : {
          "description" : "The document types.",
          "$ref" : "#/definitions/HkDocumentTypeConstants",
          "originalRef" : "HkDocumentTypeConstants"
        },
        "others" : {
          "type" : "string",
          "description" : "Additional descriptions for OTHIDV and OTHORG."
        },
        "documentNumber" : {
          "type" : "string",
          "description" : "Document number."
        },
        "documentOrigin" : {
          "type" : "string",
          "description" : "Country of licensure.",
          "x-custom-type" : "country"
        },
        "above18" : {
          "type" : "boolean",
          "description" : "Is the person 18 years of age or older. For Person only."
        },
        "industryType" : {
          "description" : "The industry types.",
          "$ref" : "#/definitions/HkIndustryTypeConstants",
          "originalRef" : "HkIndustryTypeConstants"
        }
      }
    },
    "ContactIdentificationExtensions" : {
      "type" : "object",
      "properties" : {
        "number" : {
          "type" : "string",
          "description" : "The number."
        },
        "authority" : {
          "type" : "string",
          "description" : "The authority."
        },
        "dateOfIssue" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date of issue.",
          "x-custom-type" : "date"
        },
        "validTill" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The valid till date.",
          "x-custom-type" : "date"
        }
      }
    },
    "ContactItExtensions" : {
      "type" : "object",
      "properties" : {
        "entityType" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The number of the matching entity."
        }
      }
    },
    "ContactJobsExtensions" : {
      "type" : "object",
      "properties" : {
        "adminType" : {
          "type" : "boolean",
          "description" : "Contact is the administrative contact with the permission to act as an independent agent / recruiter on behalf of the listed registrant."
        },
        "contactTitle" : {
          "type" : "string",
          "description" : "Title of the domain contact in the organization."
        },
        "hrMember" : {
          "type" : "boolean",
          "description" : "Choose whether the contact is is a member of the Human Resource Organization"
        },
        "industryClass" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The Industry class."
        },
        "website" : {
          "type" : "string",
          "description" : "The Website.",
          "x-custom-type" : "uri"
        }
      }
    },
    "ContactJpExtensions" : {
      "type" : "object",
      "properties" : {
        "first" : {
          "type" : "string",
          "description" : "The first name."
        },
        "last" : {
          "type" : "string",
          "description" : "The last name."
        },
        "organization" : {
          "type" : "string",
          "description" : "The organization."
        },
        "adressLine1" : {
          "type" : "string",
          "description" : "The first line of the address."
        },
        "adressLine2" : {
          "type" : "string",
          "description" : "The second line of the address."
        },
        "adressLine3" : {
          "type" : "string",
          "description" : "The third line of the address."
        }
      }
    },
    "ContactLuxeExtensions" : {
      "type" : "object",
      "properties" : {
        "walletAddress" : {
          "type" : "string",
          "description" : "The .luxe wallet address"
        }
      }
    },
    "ContactNzExtensions" : {
      "type" : "object",
      "properties" : {
        "irpo" : {
          "type" : "boolean",
          "description" : "The irpo."
        }
      }
    },
    "ContactProtectionConstants" : {
      "type" : "string",
      "enum" : [ "SHOW_ALL", "SHOW_NONE" ]
    },
    "ContactQualifiedLawyerExtensions" : {
      "type" : "object",
      "properties" : {
        "qualifiedLawyerAccreditationId" : {
          "type" : "string",
          "description" : "The qualified lawyer accreditation ID is a character string issued by the accreditation body. Accreditation IDs uniquely identify the registrant within the context of the accreditation body. An accreditation ID is required."
        },
        "qualifiedLawyerAccreditationBody" : {
          "type" : "string",
          "description" : "The qualified lawyer accreditation body is the entity that issued the accreditation ID to the registrant. Within the qualified lawyer extension, a character string is used to represent an accreditation body. The accreditation body is required."
        },
        "qualifiedLawyerAccreditationYear" : {
          "type" : "string",
          "description" : "A qualified lawyer accreditation year is the year he/she was initially certified by the accreditation body. It is represented by a four-digit year including the century. Mandatory.",
          "x-custom-type" : "year"
        },
        "qualifiedLawyerJurisdictionCc" : {
          "type" : "string",
          "description" : "The qualified lawyer accreditation jurisdiction country is the country in which the accreditation body certifies the registrant. ISO two-­‐letter country codes are used to represent the accreditation jurisdiction country. The accreditation jurisdiction country is required."
        },
        "qualifiedLawyerJurisdictionSp" : {
          "type" : "string",
          "description" : "The qualified lawyer accreditation jurisdiction state/province is the specific region, within the accreditation jurisdiction country, in which the accreditation body certifies the registrant. A character string represents the region. The accreditation jurisdiction is required when the accrediting body limits the certification to this area."
        }
      }
    },
    "ContactReference" : {
      "type" : "object"
    },
    "ContactRoExtensions" : {
      "type" : "object",
      "properties" : {
        "personType" : {
          "description" : "The entity person type.",
          "$ref" : "#/definitions/RoPersonTypeConstants",
          "originalRef" : "RoPersonTypeConstants"
        }
      }
    },
    "ContactRuExtensions" : {
      "type" : "object",
      "properties" : {
        "taxpayerIdentificationNumber" : {
          "type" : "string",
          "description" : "Taxpayer Identification Number (code). Mandatory for organisations which belong to the Russian Federation."
        },
        "territoryLinkedTaxpayerNumber" : {
          "type" : "string",
          "description" : "Territory-linked Taxpayer Number (kpp). Mandatory for organisations which belong to the Russian Federation."
        }
      }
    },
    "ContactSportExtensions" : {
      "type" : "object",
      "properties" : {
        "intendedUse" : {
          "type" : "string",
          "description" : "The intended use."
        }
      }
    },
    "ContactSwissExtensions" : {
      "type" : "object",
      "properties" : {
        "enterpriseId" : {
          "type" : "string",
          "description" : "The enterprise ID, in the specific context of .swiss based on current rules, is the Swiss UID/IDE/IDI."
        },
        "intededUse" : {
          "type" : "string",
          "description" : "The statement of intended use for the domain name."
        }
      }
    },
    "ContactTrademarkExtensions" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "The name."
        },
        "number" : {
          "type" : "string",
          "description" : "The number."
        },
        "country" : {
          "type" : "string",
          "description" : "The country.",
          "x-custom-type" : "country"
        },
        "regdate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The registration date.",
          "x-custom-type" : "date"
        },
        "appdate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The application date.",
          "x-custom-type" : "date"
        },
        "office" : {
          "type" : "string",
          "description" : "The office."
        }
      }
    },
    "ContactTypeConstants" : {
      "type" : "string",
      "enum" : [ "PERSON", "ORG", "ROLE" ]
    },
    "ContactUkExtensions" : {
      "type" : "object",
      "properties" : {
        "entityType" : {
          "description" : "The entity type.",
          "$ref" : "#/definitions/UkTypeConstants",
          "originalRef" : "UkTypeConstants"
        }
      }
    },
    "ContactXxxExtensions" : {
      "type" : "object",
      "properties" : {
        "membershipID" : {
          "type" : "string",
          "description" : "Membership ID (token) for the .XXX community."
        },
        "nonResolverDomain" : {
          "type" : "boolean",
          "description" : "XXX community membership available or not."
        }
      }
    },
    "CsrHashAlgorithmConstants" : {
      "type" : "string",
      "enum" : [ "ECC", "RSA", "DSA" ]
    },
    "Customer" : {
      "type" : "object",
      "required" : [ "client", "name", "number", "payment" ],
      "properties" : {
        "number" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Lorem Ipsum"
        },
        "client" : {
          "type" : "string",
          "description" : "Lorem Ipsum",
          "minLength" : 1,
          "maxLength" : 2147483647
        },
        "group" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Lorem Ipsum"
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the customer.",
          "minLength" : 0,
          "maxLength" : 255
        },
        "payment" : {
          "description" : "The payment typ of the customer.",
          "$ref" : "#/definitions/PaymentConstants",
          "originalRef" : "PaymentConstants"
        }
      }
    },
    "DNSSec" : {
      "type" : "object",
      "required" : [ "algorithm", "publicKey" ],
      "properties" : {
        "algorithm" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The algorithm."
        },
        "publicKey" : {
          "type" : "string",
          "description" : "The public key.",
          "pattern" : "^[\\sA-Za-z0-9+\\/]+[=]*$"
        }
      }
    },
    "DNSSecJob" : {
      "type" : "object"
    },
    "Domain" : {
      "type" : "object",
      "required" : [ "name", "payable", "removeCancelation" ],
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "owner" : {
          "description" : "The owner of the object.",
          "$ref" : "#/definitions/User",
          "originalRef" : "User"
        },
        "updater" : {
          "description" : "The updater of the object.",
          "$ref" : "#/definitions/User",
          "originalRef" : "User"
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the domain."
        },
        "expire" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The expire date of the domain."
        },
        "payable" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The payable date of the domain."
        },
        "ownerc" : {
          "description" : "The owner contact.",
          "$ref" : "#/definitions/Contact",
          "originalRef" : "Contact"
        },
        "adminc" : {
          "description" : "The admin contact.",
          "$ref" : "#/definitions/Contact",
          "originalRef" : "Contact"
        },
        "techc" : {
          "description" : "The technical contact.",
          "$ref" : "#/definitions/Contact",
          "originalRef" : "Contact"
        },
        "zonec" : {
          "description" : "The zone contact.",
          "$ref" : "#/definitions/Contact",
          "originalRef" : "Contact"
        },
        "nicMemberLabel" : {
          "type" : "string",
          "description" : "The nic member label."
        },
        "registryStatus" : {
          "description" : "The registry status.",
          "$ref" : "#/definitions/RegistryStatusConstants",
          "originalRef" : "RegistryStatusConstants"
        },
        "nameServers" : {
          "type" : "array",
          "description" : "The nameservers.",
          "items" : {
            "$ref" : "#/definitions/NameServer",
            "originalRef" : "NameServer"
          }
        },
        "nameServerEntries" : {
          "type" : "array",
          "description" : "NSentry is only be provided for .DE. If NSentry is used, nameServers is not allowed.",
          "items" : {
            "type" : "string"
          }
        },
        "period" : {
          "description" : "The renew period in years.",
          "$ref" : "#/definitions/TimePeriod",
          "originalRef" : "TimePeriod"
        },
        "lastAction" : {
          "description" : "The last action.",
          "$ref" : "#/definitions/DomainActionConstants",
          "originalRef" : "DomainActionConstants"
        },
        "trustee" : {
          "type" : "boolean",
          "description" : "Enable trustee service for the domain."
        },
        "privacy" : {
          "type" : "boolean",
          "description" : "Enable privacy service for the domain."
        },
        "autoDnsSec" : {
          "type" : "boolean",
          "description" : "Enable auto dnssec for the domain."
        },
        "authinfo" : {
          "type" : "string",
          "description" : "The authinfo."
        },
        "domainsafe" : {
          "type" : "boolean",
          "description" : "Enable domainsafe."
        },
        "dnssec" : {
          "type" : "boolean",
          "description" : "Enable dnssec"
        },
        "validCertificate" : {
          "type" : "boolean",
          "description" : "Domain has an matching certificate."
        },
        "parking" : {
          "description" : "The parking provider.",
          "$ref" : "#/definitions/ParkingProviderConstants",
          "originalRef" : "ParkingProviderConstants"
        },
        "cancelationStatus" : {
          "description" : "The cancelation status.",
          "$ref" : "#/definitions/CancelationStatusConstants",
          "originalRef" : "CancelationStatusConstants"
        },
        "autoRenewStatus" : {
          "description" : "The autorenew status.",
          "$ref" : "#/definitions/AutoRenewStatusConstants",
          "originalRef" : "AutoRenewStatusConstants"
        },
        "dnssecData" : {
          "type" : "array",
          "description" : "The dnssec data.",
          "items" : {
            "$ref" : "#/definitions/DNSSec",
            "originalRef" : "DNSSec"
          }
        },
        "extensions" : {
          "description" : "The domain extensions.",
          "$ref" : "#/definitions/DomainExtensions",
          "originalRef" : "DomainExtensions"
        },
        "logId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The logId"
        },
        "confirmOrder" : {
          "type" : "boolean",
          "description" : "Some TLDs require a confirmation of the “Terms and Conditions of Registration."
        },
        "confirmOwnerConsent" : {
          "type" : "boolean",
          "description" : "Confirms the consent of the domainowner for the changes. Required for gTLDs and new gTLDs when changing the name, the email address or the organization of the domain owner."
        },
        "ignoreWhois" : {
          "type" : "boolean",
          "description" : "Ignore whois."
        },
        "comment" : {
          "type" : "string",
          "description" : "A custom field."
        },
        "includeWWW" : {
          "type" : "boolean",
          "description" : "Enable utomatic creation of the www subdomain."
        },
        "includeWildcard" : {
          "type" : "boolean",
          "description" : "Enable include wildcard."
        },
        "registrarStatus" : {
          "description" : "The registrar status.",
          "$ref" : "#/definitions/RegistryStatusConstants",
          "originalRef" : "RegistryStatusConstants"
        },
        "registrarStatusReason" : {
          "type" : "string",
          "description" : "The registrar status reason."
        },
        "removeCancelation" : {
          "type" : "boolean",
          "description" : "Remove cancelation."
        },
        "autodnsSecJob" : {
          "description" : "AutodnsSecJob",
          "$ref" : "#/definitions/DNSSecJob",
          "originalRef" : "DNSSecJob"
        },
        "priceClass" : {
          "type" : "string",
          "description" : "The priceclass for the registration of the domain."
        },
        "priceClassRenew" : {
          "type" : "string",
          "description" : "The priceclass for the renew of the domain."
        },
        "abuseEmail" : {
          "type" : "string",
          "description" : "The abuse email."
        },
        "generalRequestEmail" : {
          "type" : "string",
          "description" : "The general request mail."
        },
        "privacyPlusMail" : {
          "type" : "string",
          "description" : "The privacy plus mail."
        },
        "privacyPlus" : {
          "type" : "boolean",
          "description" : "Enable privacy plus."
        },
        "nameServerGroup" : {
          "type" : "string",
          "description" : "The nameserver group."
        },
        "rddsOptIn" : {
          "description" : "Enables the whois output to show redacted contacts.",
          "$ref" : "#/definitions/RddsOptInConstants",
          "originalRef" : "RddsOptInConstants"
        },
        "zone" : {
          "description" : "The zone to create.",
          "$ref" : "#/definitions/Zone",
          "originalRef" : "Zone"
        }
      }
    },
    "DomainActionConstants" : {
      "type" : "string",
      "enum" : [ "CREATE", "UPDATE", "UPDATE_OWNER_CHANGE", "UPDATE_DNSSEC", "UPDATE_NAMESERVER", "DELETE", "TRANSIT", "TRANSFER", "TRANSFER_INTERN", "TRANSFER_INTERN_REGISTRAR_CHANGE", "TRANSFER_INTERN_REGISTRAR_CHANGE_RUNTIME_TAKEOVER", "IMPORT", "MIGRATE", "RESTORE", "RESTORE_NE", "RESTORE_RENEW", "RESTORE_ARGP", "RENEW", "AUTHINFO", "AUTHINFO_2", "UPDATE_STATUS", "REGISTRAR_UPDATE_STATUS", "UPDATE_COMMENT", "AUTOUPDATE_DNS", "OWNERCHANGE", "OWNERCHANGE_TRANSFER", "OWNERCHANGE_TRANSFER_INTERN", "OWNERCHANGE_TRANSFER_INTERN_REGISTRAR_CHANGE", "PREACK", "WHOIS_REGISTRY_STATUS", "DOMAIN_AWAY", "TRANSFER_OUT_AUTOACK", "DROP", "AUTHINFO_CREATE", "AUTHINFO_DELETE", "AUTOUPDATE_DEFERRED", "DOMAIN_BUY" ]
    },
    "DomainCancelation" : {
      "type" : "object",
      "required" : [ "domain", "execution", "registryWhen", "type" ],
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "owner" : {
          "description" : "The owner of the object.",
          "$ref" : "#/definitions/User",
          "originalRef" : "User"
        },
        "updater" : {
          "description" : "The updater of the object.",
          "$ref" : "#/definitions/User",
          "originalRef" : "User"
        },
        "domain" : {
          "type" : "string",
          "description" : "Lorem Ipsum"
        },
        "type" : {
          "description" : "The cancelation type. TRANSIT is only possible for certain TLDs.",
          "$ref" : "#/definitions/CancelationTypeConstants",
          "originalRef" : "CancelationTypeConstants"
        },
        "execution" : {
          "description" : "The execution type.",
          "$ref" : "#/definitions/ExecutionTypeConstants",
          "originalRef" : "ExecutionTypeConstants"
        },
        "registryWhen" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date of the execution. Only necessary when ExecutionType equals DATE."
        },
        "gainingRegistrar" : {
          "type" : "string",
          "description" : "Lorem Ipsum"
        },
        "disconnect" : {
          "type" : "boolean",
          "description" : "Lorem Ipsum"
        },
        "notice" : {
          "type" : "string",
          "description" : "Lorem Ipsum"
        },
        "logId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Lorem Ipsum"
        },
        "registryStatus" : {
          "description" : "Lorem Ipsum",
          "$ref" : "#/definitions/RegistryStatusConstants",
          "originalRef" : "RegistryStatusConstants"
        }
      }
    },
    "DomainExtensions" : {
      "type" : "object",
      "properties" : {
        "parkingExtensions" : {
          "$ref" : "#/definitions/DomainParkingExtensions",
          "originalRef" : "DomainParkingExtensions"
        },
        "generalExtensions" : {
          "$ref" : "#/definitions/DomainGeneralExtensions",
          "originalRef" : "DomainGeneralExtensions"
        }
      }
    },
    "DomainGeneralExtensions" : {
      "type" : "object",
      "properties" : {
        "externalReference" : {
          "type" : "string"
        },
        "notAfter" : {
          "type" : "string",
          "format" : "date-time"
        },
        "confirmed" : {
          "type" : "string",
          "format" : "date-time"
        },
        "confirmIp" : {
          "type" : "string"
        },
        "priceClass" : {
          "type" : "string"
        }
      }
    },
    "DomainParkingExtensions" : {
      "type" : "object",
      "properties" : {
        "parkingCategory" : {
          "type" : "string"
        },
        "parkingCurrency" : {
          "$ref" : "#/definitions/ParkingCurrencyConstants",
          "originalRef" : "ParkingCurrencyConstants"
        },
        "parkingDomainLanguage" : {
          "type" : "string"
        },
        "parkingFixedPrice" : {
          "type" : "boolean"
        },
        "parkingForSale" : {
          "type" : "boolean"
        },
        "parkingKeyword" : {
          "type" : "string"
        },
        "parkingPrice" : {
          "type" : "number",
          "format" : "double",
          "minimum" : 0,
          "exclusiveMinimum" : false
        },
        "parkingMinPrice" : {
          "type" : "number",
          "format" : "double",
          "minimum" : 0,
          "exclusiveMinimum" : false
        }
      }
    },
    "DomainRestore" : {
      "type" : "object",
      "required" : [ "name", "payable", "removeCancelation" ],
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "owner" : {
          "description" : "The owner of the object.",
          "$ref" : "#/definitions/User",
          "originalRef" : "User"
        },
        "updater" : {
          "description" : "The updater of the object.",
          "$ref" : "#/definitions/User",
          "originalRef" : "User"
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the domain."
        },
        "expire" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The expire date of the domain."
        },
        "payable" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The payable date of the domain."
        },
        "ownerc" : {
          "description" : "The owner contact.",
          "$ref" : "#/definitions/Contact",
          "originalRef" : "Contact"
        },
        "adminc" : {
          "description" : "The admin contact.",
          "$ref" : "#/definitions/Contact",
          "originalRef" : "Contact"
        },
        "techc" : {
          "description" : "The technical contact.",
          "$ref" : "#/definitions/Contact",
          "originalRef" : "Contact"
        },
        "zonec" : {
          "description" : "The zone contact.",
          "$ref" : "#/definitions/Contact",
          "originalRef" : "Contact"
        },
        "nicMemberLabel" : {
          "type" : "string",
          "description" : "The nic member label."
        },
        "registryStatus" : {
          "description" : "The registry status.",
          "$ref" : "#/definitions/RegistryStatusConstants",
          "originalRef" : "RegistryStatusConstants"
        },
        "nameServers" : {
          "type" : "array",
          "description" : "The nameservers.",
          "items" : {
            "$ref" : "#/definitions/NameServer",
            "originalRef" : "NameServer"
          }
        },
        "nameServerEntries" : {
          "type" : "array",
          "description" : "NSentry is only be provided for .DE. If NSentry is used, nameServers is not allowed.",
          "items" : {
            "type" : "string"
          }
        },
        "period" : {
          "description" : "The renew period in years.",
          "$ref" : "#/definitions/TimePeriod",
          "originalRef" : "TimePeriod"
        },
        "lastAction" : {
          "description" : "The last action.",
          "$ref" : "#/definitions/DomainActionConstants",
          "originalRef" : "DomainActionConstants"
        },
        "trustee" : {
          "type" : "boolean",
          "description" : "Enable trustee service for the domain."
        },
        "privacy" : {
          "type" : "boolean",
          "description" : "Enable privacy service for the domain."
        },
        "autoDnsSec" : {
          "type" : "boolean",
          "description" : "Enable auto dnssec for the domain."
        },
        "authinfo" : {
          "type" : "string",
          "description" : "The authinfo."
        },
        "domainsafe" : {
          "type" : "boolean",
          "description" : "Enable domainsafe."
        },
        "dnssec" : {
          "type" : "boolean",
          "description" : "Enable dnssec"
        },
        "validCertificate" : {
          "type" : "boolean",
          "description" : "Domain has an matching certificate."
        },
        "parking" : {
          "description" : "The parking provider.",
          "$ref" : "#/definitions/ParkingProviderConstants",
          "originalRef" : "ParkingProviderConstants"
        },
        "cancelationStatus" : {
          "description" : "The cancelation status.",
          "$ref" : "#/definitions/CancelationStatusConstants",
          "originalRef" : "CancelationStatusConstants"
        },
        "autoRenewStatus" : {
          "description" : "The autorenew status.",
          "$ref" : "#/definitions/AutoRenewStatusConstants",
          "originalRef" : "AutoRenewStatusConstants"
        },
        "dnssecData" : {
          "type" : "array",
          "description" : "The dnssec data.",
          "items" : {
            "$ref" : "#/definitions/DNSSec",
            "originalRef" : "DNSSec"
          }
        },
        "extensions" : {
          "description" : "The domain extensions.",
          "$ref" : "#/definitions/DomainExtensions",
          "originalRef" : "DomainExtensions"
        },
        "logId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The logId"
        },
        "confirmOrder" : {
          "type" : "boolean",
          "description" : "Some TLDs require a confirmation of the “Terms and Conditions of Registration."
        },
        "confirmOwnerConsent" : {
          "type" : "boolean",
          "description" : "Confirms the consent of the domainowner for the changes. Required for gTLDs and new gTLDs when changing the name, the email address or the organization of the domain owner."
        },
        "ignoreWhois" : {
          "type" : "boolean",
          "description" : "Ignore whois."
        },
        "comment" : {
          "type" : "string",
          "description" : "A custom field."
        },
        "includeWWW" : {
          "type" : "boolean",
          "description" : "Enable utomatic creation of the www subdomain."
        },
        "includeWildcard" : {
          "type" : "boolean",
          "description" : "Enable include wildcard."
        },
        "registrarStatus" : {
          "description" : "The registrar status.",
          "$ref" : "#/definitions/RegistryStatusConstants",
          "originalRef" : "RegistryStatusConstants"
        },
        "registrarStatusReason" : {
          "type" : "string",
          "description" : "The registrar status reason."
        },
        "removeCancelation" : {
          "type" : "boolean",
          "description" : "Remove cancelation."
        },
        "autodnsSecJob" : {
          "description" : "AutodnsSecJob",
          "$ref" : "#/definitions/DNSSecJob",
          "originalRef" : "DNSSecJob"
        },
        "priceClass" : {
          "type" : "string",
          "description" : "The priceclass for the registration of the domain."
        },
        "priceClassRenew" : {
          "type" : "string",
          "description" : "The priceclass for the renew of the domain."
        },
        "abuseEmail" : {
          "type" : "string",
          "description" : "The abuse email."
        },
        "generalRequestEmail" : {
          "type" : "string",
          "description" : "The general request mail."
        },
        "privacyPlusMail" : {
          "type" : "string",
          "description" : "The privacy plus mail."
        },
        "privacyPlus" : {
          "type" : "boolean",
          "description" : "Enable privacy plus."
        },
        "nameServerGroup" : {
          "type" : "string",
          "description" : "The nameserver group."
        },
        "rddsOptIn" : {
          "description" : "Enables the whois output to show redacted contacts.",
          "$ref" : "#/definitions/RddsOptInConstants",
          "originalRef" : "RddsOptInConstants"
        },
        "zone" : {
          "description" : "The zone to create.",
          "$ref" : "#/definitions/Zone",
          "originalRef" : "Zone"
        },
        "deleted" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Lorem Ipsum"
        },
        "endOfPhase" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Lorem Ipsum"
        }
      }
    },
    "ExecutionTypeConstants" : {
      "type" : "string",
      "enum" : [ "DATE", "EXPIRE", "NOW" ]
    },
    "FilterLinkConstants" : {
      "type" : "string",
      "enum" : [ "AND", "OR" ]
    },
    "FilterOperatorConstants" : {
      "type" : "string",
      "enum" : [ "EQUAL", "NOT_EQUAL", "NOT_LIKE", "LIKE", "ILIKE", "GREATER", "GREATER_EQUAL", "LESS", "LESS_EQUAL", "IS_NULL", "IS_NOT_NULL", "IN" ]
    },
    "GenderConstants" : {
      "type" : "string",
      "enum" : [ "MALE", "FEMALE" ]
    },
    "GenericObject" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "The type of the object."
        },
        "value" : {
          "type" : "string",
          "description" : "The value of the object."
        }
      }
    },
    "GenericStatusConstants" : {
      "type" : "string",
      "enum" : [ "PENDING", "SUCCESS", "FAILED", "NOT_SET" ]
    },
    "HkDocumentTypeConstants" : {
      "type" : "string",
      "enum" : [ "HKID", "OTHID", "PASSNO", "BIRTHCERT", "OTHIDV", "BR", "CI", "CRS", "HKSARG", "HKORDINANCE", "OTHORG" ]
    },
    "HkIndustryTypeConstants" : {
      "type" : "string",
      "enum" : [ "_0", "_4160", "_4224", "_4288", "_4352", "_4416", "_8256", "_8320", "_8384", "_8448", "_8512", "_12352", "_12416", "_16448", "_16512", "_16576", "_16640", "_16704", "_16768", "_16832", "_20544", "_20608", "_20672", "_20736", "_20800", "_20864", "_20928", "_24640", "_24704", "_24768", "_28736", "_28800", "_28864", "_28928", "_28992", "_29056", "_29120", "_070800", "_070900", "_080100", "_080200", "_080300", "_080400", "_080500", "_080600", "_080700", "_080800", "_080900", "_081000", "_081100", "_090100", "_090200", "_090300", "_090400", "_090500", "_100100", "_100200", "_100300", "_100400", "_100500", "_110100", "_110200", "_110300", "_110400", "_110500", "_110600", "_120100", "_120200", "_120300", "_120400", "_120500", "_120600", "_120700", "_120800", "_120900", "_130100", "_130200", "_130300", "_130400", "_130500", "_130600", "_130700", "_130800", "_140101", "_140102", "_140103", "_140200", "_140300", "_140400", "_140500", "_140600", "_140700" ]
    },
    "Job" : {
      "type" : "object",
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "owner" : {
          "description" : "The owner of the object.",
          "$ref" : "#/definitions/User",
          "originalRef" : "User"
        },
        "updater" : {
          "description" : "The updater of the object.",
          "$ref" : "#/definitions/User",
          "originalRef" : "User"
        },
        "object" : {
          "type" : "string",
          "description" : "The object."
        },
        "status" : {
          "description" : "The status of the job.",
          "$ref" : "#/definitions/JobStatusConstants",
          "originalRef" : "JobStatusConstants"
        },
        "subStatus" : {
          "type" : "string",
          "description" : "The substatus of the job."
        },
        "execution" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The next execution date of the job."
        },
        "events" : {
          "type" : "array",
          "description" : "The events.",
          "items" : {
            "$ref" : "#/definitions/WorkflowEvent",
            "originalRef" : "WorkflowEvent"
          }
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The job id."
        },
        "type" : {
          "type" : "string",
          "description" : "The job type."
        },
        "subType" : {
          "type" : "string",
          "description" : "The job subtype."
        },
        "action" : {
          "type" : "string",
          "description" : "The job action."
        }
      }
    },
    "JobStatusConstants" : {
      "type" : "string",
      "enum" : [ "RUNNING", "SUCCESS", "FAILED", "CANCELED", "SUPPORT", "DEFERRED", "NOT_SET", "WAIT" ]
    },
    "JsonNoData" : {
      "type" : "object"
    },
    "JsonResponseData" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "$ref" : "#/definitions/ResponseStatus",
          "originalRef" : "ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "$ref" : "#/definitions/ResponseObject",
          "originalRef" : "ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "type" : "object"
          }
        }
      }
    },
    "JsonResponseDataBasicDocument" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "$ref" : "#/definitions/ResponseStatus",
          "originalRef" : "ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "$ref" : "#/definitions/ResponseObject",
          "originalRef" : "ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "$ref" : "#/definitions/BasicDocument",
            "originalRef" : "BasicDocument"
          }
        }
      }
    },
    "JsonResponseDataContact" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "$ref" : "#/definitions/ResponseStatus",
          "originalRef" : "ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "$ref" : "#/definitions/ResponseObject",
          "originalRef" : "ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "$ref" : "#/definitions/Contact",
            "originalRef" : "Contact"
          }
        }
      }
    },
    "JsonResponseDataDomain" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "$ref" : "#/definitions/ResponseStatus",
          "originalRef" : "ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "$ref" : "#/definitions/ResponseObject",
          "originalRef" : "ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "$ref" : "#/definitions/Domain",
            "originalRef" : "Domain"
          }
        }
      }
    },
    "JsonResponseDataDomainCancelation" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "$ref" : "#/definitions/ResponseStatus",
          "originalRef" : "ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "$ref" : "#/definitions/ResponseObject",
          "originalRef" : "ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "$ref" : "#/definitions/DomainCancelation",
            "originalRef" : "DomainCancelation"
          }
        }
      }
    },
    "JsonResponseDataDomainRestore" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "$ref" : "#/definitions/ResponseStatus",
          "originalRef" : "ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "$ref" : "#/definitions/ResponseObject",
          "originalRef" : "ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "$ref" : "#/definitions/DomainRestore",
            "originalRef" : "DomainRestore"
          }
        }
      }
    },
    "JsonResponseDataJob" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "$ref" : "#/definitions/ResponseStatus",
          "originalRef" : "ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "$ref" : "#/definitions/ResponseObject",
          "originalRef" : "ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "$ref" : "#/definitions/Job",
            "originalRef" : "Job"
          }
        }
      }
    },
    "JsonResponseDataJsonNoData" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "$ref" : "#/definitions/ResponseStatus",
          "originalRef" : "ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "$ref" : "#/definitions/ResponseObject",
          "originalRef" : "ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "$ref" : "#/definitions/JsonNoData",
            "originalRef" : "JsonNoData"
          }
        }
      }
    },
    "JsonResponseDataObjectJob" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "$ref" : "#/definitions/ResponseStatus",
          "originalRef" : "ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "$ref" : "#/definitions/ResponseObject",
          "originalRef" : "ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "$ref" : "#/definitions/ObjectJob",
            "originalRef" : "ObjectJob"
          }
        }
      }
    },
    "JsonResponseDataPollMessage" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "$ref" : "#/definitions/ResponseStatus",
          "originalRef" : "ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "$ref" : "#/definitions/ResponseObject",
          "originalRef" : "ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "$ref" : "#/definitions/PollMessage",
            "originalRef" : "PollMessage"
          }
        }
      }
    },
    "JsonResponseDataRedirect" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "$ref" : "#/definitions/ResponseStatus",
          "originalRef" : "ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "$ref" : "#/definitions/ResponseObject",
          "originalRef" : "ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "$ref" : "#/definitions/Redirect",
            "originalRef" : "Redirect"
          }
        }
      }
    },
    "JsonResponseDataSslContact" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "$ref" : "#/definitions/ResponseStatus",
          "originalRef" : "ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "$ref" : "#/definitions/ResponseObject",
          "originalRef" : "ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "$ref" : "#/definitions/SslContact",
            "originalRef" : "SslContact"
          }
        }
      }
    },
    "JsonResponseDataString" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "$ref" : "#/definitions/ResponseStatus",
          "originalRef" : "ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "$ref" : "#/definitions/ResponseObject",
          "originalRef" : "ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "JsonResponseDataUser" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "$ref" : "#/definitions/ResponseStatus",
          "originalRef" : "ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "$ref" : "#/definitions/ResponseObject",
          "originalRef" : "ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "$ref" : "#/definitions/User",
            "originalRef" : "User"
          }
        }
      }
    },
    "JsonResponseDataZone" : {
      "type" : "object",
      "properties" : {
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id for the response."
        },
        "ctid" : {
          "type" : "string",
          "description" : "The client transaction id for the response."
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages belonging to the response.",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "status" : {
          "description" : "The status of the response.",
          "$ref" : "#/definitions/ResponseStatus",
          "originalRef" : "ResponseStatus"
        },
        "object" : {
          "description" : "The object of the response.",
          "$ref" : "#/definitions/ResponseObject",
          "originalRef" : "ResponseObject"
        },
        "data" : {
          "type" : "array",
          "description" : "The data for the response. The type of the objects are depending on the request and are also specified in the responseObject value of the response.",
          "items" : {
            "$ref" : "#/definitions/Zone",
            "originalRef" : "Zone"
          }
        }
      }
    },
    "LanguageConstants" : {
      "type" : "string",
      "enum" : [ "CS", "DA", "DE", "EL", "EN", "ES", "ET", "FI", "FR", "HU", "IT", "LT", "LV", "NL", "PL", "PT", "SK", "SL", "SV" ]
    },
    "MainIp" : {
      "type" : "object",
      "properties" : {
        "address" : {
          "type" : "string",
          "description" : "Lorem Ipsum"
        },
        "ttl" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Lorem Ipsum"
        }
      }
    },
    "Message" : {
      "type" : "object",
      "properties" : {
        "text" : {
          "type" : "string",
          "description" : "The text of the message."
        },
        "code" : {
          "type" : "string",
          "description" : "The code of the message."
        },
        "status" : {
          "description" : "The status of the message.",
          "$ref" : "#/definitions/MessageStatusConstants",
          "originalRef" : "MessageStatusConstants"
        },
        "messages" : {
          "type" : "array",
          "description" : "The messages.",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "objects" : {
          "type" : "array",
          "description" : "The object that belongs to the message.",
          "items" : {
            "$ref" : "#/definitions/GenericObject",
            "originalRef" : "GenericObject"
          }
        }
      }
    },
    "MessageStatusConstants" : {
      "type" : "string",
      "enum" : [ "SUCCESS", "ERROR", "NOTIFY", "NOTICE" ]
    },
    "NameServer" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Host name of the nameserver."
        },
        "ttl" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The time to live."
        },
        "ipAddresses" : {
          "type" : "array",
          "description" : "The ip addresses.",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "NameserverActionConstants" : {
      "type" : "string",
      "enum" : [ "PRIMARY", "SECONDARY", "COMPLETE", "HIDDEN", "NONE", "AUTO" ]
    },
    "NotifyMessage" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "example" : "domain_away",
          "description" : "The specific message type."
        }
      }
    },
    "ObjectJob" : {
      "type" : "object",
      "properties" : {
        "object" : {
          "type" : "object",
          "example" : "domain data",
          "description" : "The object data."
        },
        "type" : {
          "type" : "string",
          "example" : "domain",
          "description" : "The type of the object."
        },
        "job" : {
          "description" : "The related job.",
          "$ref" : "#/definitions/Job",
          "originalRef" : "Job"
        }
      }
    },
    "OrderTypeConstants" : {
      "type" : "string",
      "enum" : [ "ASC", "DESC" ]
    },
    "ParkingCurrencyConstants" : {
      "type" : "string",
      "enum" : [ "USD", "EUR", "GBP" ]
    },
    "ParkingProviderConstants" : {
      "type" : "string",
      "enum" : [ "SEDO", "NAMEDRIVE", "PARKINGCREW" ]
    },
    "PaymentConstants" : {
      "type" : "string",
      "enum" : [ "PRE", "POST", "LIVE" ]
    },
    "PollMessage" : {
      "type" : "object",
      "properties" : {
        "object" : {
          "type" : "object",
          "example" : "domain data",
          "description" : "The object data."
        },
        "type" : {
          "type" : "string",
          "example" : "domain",
          "description" : "The type of the object."
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The message id."
        },
        "owner" : {
          "description" : "The owner of the message.",
          "$ref" : "#/definitions/User",
          "originalRef" : "User"
        },
        "job" : {
          "description" : "The job data. Available if the message is a job message",
          "$ref" : "#/definitions/Job",
          "originalRef" : "Job"
        },
        "notify" : {
          "description" : "The notification data. Available if the message is a notification message",
          "$ref" : "#/definitions/NotifyMessage",
          "originalRef" : "NotifyMessage"
        },
        "stid" : {
          "type" : "string",
          "description" : "The server transaction id."
        },
        "ctid" : {
          "type" : "string",
          "description" : "the custom transaction id."
        },
        "messages" : {
          "type" : "array",
          "description" : "The general localized messages.",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        }
      }
    },
    "Query" : {
      "type" : "object",
      "properties" : {
        "filters" : {
          "type" : "array",
          "description" : "Lorem Ipsum",
          "items" : {
            "$ref" : "#/definitions/QueryFilter",
            "originalRef" : "QueryFilter"
          }
        },
        "view" : {
          "description" : "Lorem Ipsum",
          "$ref" : "#/definitions/QueryView",
          "originalRef" : "QueryView"
        },
        "orders" : {
          "type" : "array",
          "description" : "Lorem Ipsum",
          "items" : {
            "$ref" : "#/definitions/QueryOrder",
            "originalRef" : "QueryOrder"
          }
        }
      }
    },
    "QueryBuilder" : {
      "type" : "object"
    },
    "QueryFilter" : {
      "type" : "object",
      "properties" : {
        "key" : {
          "type" : "string",
          "description" : "Lorem Ipsum"
        },
        "value" : {
          "type" : "string",
          "description" : "Lorem Ipsum"
        },
        "operator" : {
          "description" : "Lorem Ipsum",
          "$ref" : "#/definitions/FilterOperatorConstants",
          "originalRef" : "FilterOperatorConstants"
        },
        "link" : {
          "description" : "Lorem Ipsum",
          "$ref" : "#/definitions/FilterLinkConstants",
          "originalRef" : "FilterLinkConstants"
        },
        "filters" : {
          "type" : "array",
          "description" : "Lorem Ipsum",
          "items" : {
            "$ref" : "#/definitions/QueryFilter",
            "originalRef" : "QueryFilter"
          }
        }
      }
    },
    "QueryOrder" : {
      "type" : "object",
      "properties" : {
        "key" : {
          "type" : "string",
          "description" : "Lorem Ipsum"
        },
        "ins" : {
          "type" : "array",
          "description" : "Lorem Ipsum",
          "items" : {
            "type" : "string"
          }
        },
        "type" : {
          "description" : "Lorem Ipsum",
          "$ref" : "#/definitions/OrderTypeConstants",
          "originalRef" : "OrderTypeConstants"
        }
      }
    },
    "QueryView" : {
      "type" : "object",
      "properties" : {
        "limit" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Lorem Ipsum"
        },
        "offset" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Lorem Ipsum"
        },
        "children" : {
          "type" : "boolean",
          "description" : "Lorem Ipsum"
        },
        "from" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Lorem Ipsum"
        },
        "to" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Lorem Ipsum"
        }
      }
    },
    "RddsOptInConstants" : {
      "type" : "string",
      "enum" : [ "NOT_SET", "OWNERC", "ADMINC", "OWNERC_ADMINC", "TECHC", "OWNERC_TECHC", "ADMINC_TECHC", "ALL" ]
    },
    "Redirect" : {
      "type" : "object",
      "required" : [ "mode", "type" ],
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "owner" : {
          "description" : "The owner of the object.",
          "$ref" : "#/definitions/User",
          "originalRef" : "User"
        },
        "updater" : {
          "description" : "The updater of the object.",
          "$ref" : "#/definitions/User",
          "originalRef" : "User"
        },
        "source" : {
          "type" : "string",
          "description" : "The domain to be redirected. Enter the domain with or without \"www\"."
        },
        "target" : {
          "type" : "string",
          "description" : "The URL of the target domain. Enter the domain without \"http://\""
        },
        "type" : {
          "description" : "Redirect type",
          "$ref" : "#/definitions/RedirectTypeConstants",
          "originalRef" : "RedirectTypeConstants"
        },
        "mode" : {
          "description" : "Redirect mode",
          "$ref" : "#/definitions/RedirectModeConstants",
          "originalRef" : "RedirectModeConstants"
        },
        "domain" : {
          "type" : "string",
          "description" : "The domain, which the redirect belongs."
        },
        "title" : {
          "type" : "string",
          "description" : "Lorem Ipsum"
        },
        "backups" : {
          "type" : "array",
          "description" : "Lorem Ipsum",
          "items" : {
            "type" : "string"
          },
          "maxItems" : 3,
          "minItems" : 0
        },
        "sourceIdn" : {
          "type" : "string",
          "description" : "The IDN version of the domain to be redirected. Enter the domain with or without \"www\"."
        },
        "targetIdn" : {
          "type" : "string",
          "description" : "The IDN version of the URL of the target domain. Enter the domain without \"http://\""
        },
        "lastSeen" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The last dns connection."
        }
      }
    },
    "RedirectModeConstants" : {
      "type" : "string",
      "enum" : [ "CATCHALL", "FRAME", "HTTP", "SINGLE", "HTTPS" ]
    },
    "RedirectTypeConstants" : {
      "type" : "string",
      "enum" : [ "DOMAIN", "EMAIL" ]
    },
    "RegistryStatusConstants" : {
      "type" : "string",
      "enum" : [ "ACTIVE", "HOLD", "LOCK", "HOLD_LOCK", "AUTO", "LOCK_OWNER", "LOCK_UPDATE", "PENDING", "NONE" ]
    },
    "ResourceRecord" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "ttl" : {
          "type" : "integer",
          "format" : "int64"
        },
        "type" : {
          "type" : "string"
        },
        "pref" : {
          "type" : "integer",
          "format" : "int32"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "ResponseObject" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "The type of the object."
        },
        "value" : {
          "type" : "string",
          "description" : "The value of the object."
        },
        "summary" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The amound of objects found in list tasks."
        }
      }
    },
    "ResponseStatus" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "The result code of the response"
        },
        "text" : {
          "type" : "string",
          "description" : "The text representation of the result code."
        },
        "type" : {
          "description" : "The status of the response.",
          "$ref" : "#/definitions/MessageStatusConstants",
          "originalRef" : "MessageStatusConstants"
        }
      }
    },
    "RoPersonTypeConstants" : {
      "type" : "string",
      "enum" : [ "P", "AP", "NC", "C", "GI", "PI", "O" ]
    },
    "ServerSoftwareTypeConstants" : {
      "type" : "string",
      "enum" : [ "IIS4", "IIS5", "APACHE2", "APACHESSL", "PLESK", "TOMCAT", "NOT_SET" ]
    },
    "SignatureHashAlgorithmConstants" : {
      "type" : "string",
      "enum" : [ "SHA1", "SHA2", "SHA2_FULL_CHAIN", "UNKNOWN", "SHA384", "SHA512", "SHA256" ]
    },
    "Soa" : {
      "type" : "object",
      "required" : [ "email" ],
      "properties" : {
        "email" : {
          "type" : "string",
          "description" : "Lorem Ipsum"
        },
        "refresh" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Lorem Ipsum"
        },
        "retry" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Lorem Ipsum"
        },
        "expire" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Lorem Ipsum"
        },
        "ttl" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Lorem Ipsum"
        },
        "minimumTtl" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Lorem Ipsum"
        },
        "level" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Lorem Ipsum"
        }
      }
    },
    "SslContact" : {
      "type" : "object",
      "required" : [ "email", "id", "organization", "phone", "title" ],
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "fname" : {
          "type" : "string",
          "example" : "John",
          "description" : "The first name of the contact"
        },
        "lname" : {
          "type" : "string",
          "example" : "Doe",
          "description" : "The last name of the contact"
        },
        "phone" : {
          "type" : "string",
          "example" : "+49-123-12345",
          "description" : "The phone number of the contact",
          "x-custom-type" : "phone"
        },
        "fax" : {
          "type" : "string",
          "example" : "+49-123-12345",
          "description" : "The fax number of the contact",
          "x-custom-type" : "phone"
        },
        "email" : {
          "type" : "string",
          "example" : "john.doe@domain.com",
          "description" : "The email of the contact",
          "x-custom-type" : "email"
        },
        "title" : {
          "type" : "string",
          "example" : "Dr.",
          "description" : "The title of the contact"
        },
        "organization" : {
          "type" : "string",
          "example" : "Company",
          "description" : "The name of the organization"
        },
        "address" : {
          "type" : "array",
          "description" : "The address of the contact.",
          "items" : {
            "type" : "string"
          }
        },
        "pcode" : {
          "type" : "string",
          "example" : "12345",
          "description" : "The pcode of the contact",
          "x-custom-type" : "pcode"
        },
        "city" : {
          "type" : "string",
          "example" : "Anytown",
          "description" : "The city of the contact"
        },
        "country" : {
          "type" : "string",
          "example" : "DE",
          "description" : "The country of the contact",
          "x-custom-type" : "country"
        },
        "state" : {
          "type" : "string",
          "example" : "BY",
          "description" : "The local country state of the contact",
          "x-custom-type" : "state"
        },
        "owner" : {
          "description" : "The owner of the object",
          "$ref" : "#/definitions/User",
          "originalRef" : "User"
        },
        "updater" : {
          "description" : "The updating using of the object",
          "$ref" : "#/definitions/User",
          "originalRef" : "User"
        },
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Unique identifier of the object"
        }
      }
    },
    "SubjectAlternativeName" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "The name of the san."
        },
        "approverEmail" : {
          "type" : "string",
          "description" : "The approver email of the san."
        },
        "orderId" : {
          "type" : "string",
          "description" : "The order id of the san."
        }
      }
    },
    "TimePeriod" : {
      "type" : "object",
      "properties" : {
        "unit" : {
          "description" : "Lorem Ipsum",
          "$ref" : "#/definitions/TimeUnitConstants",
          "originalRef" : "TimeUnitConstants"
        },
        "period" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Lorem Ipsum"
        }
      }
    },
    "TimeUnitConstants" : {
      "type" : "string",
      "enum" : [ "MILLISECOND", "SECOND", "MINUTE", "HOUR", "DAY", "WEEK", "MONTH", "QUARTER", "YEAR" ]
    },
    "UkTypeConstants" : {
      "type" : "string",
      "enum" : [ "LTD", "PLC", "PTNR", "STRA", "LLP", "IP", "IND", "SCH", "RCHAR", "GOV", "CRC", "STAT", "OTHER", "FIND", "FCORP", "FOTHER" ]
    },
    "User" : {
      "type" : "object",
      "required" : [ "context", "user" ],
      "properties" : {
        "user" : {
          "type" : "string",
          "description" : "The user name."
        },
        "context" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The context."
        },
        "password" : {
          "type" : "string",
          "description" : "The password."
        },
        "defaultEmail" : {
          "type" : "string",
          "description" : "The default email."
        },
        "language" : {
          "type" : "string",
          "description" : "The language."
        },
        "status" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The status."
        },
        "substatus" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The substatus."
        },
        "owner" : {
          "description" : "The parent.",
          "$ref" : "#/definitions/User",
          "originalRef" : "User"
        },
        "acls" : {
          "description" : "Wrapper for the user acls.",
          "$ref" : "#/definitions/UserAcls",
          "originalRef" : "UserAcls"
        },
        "profiles" : {
          "description" : "Wrapper for the user profiles.",
          "$ref" : "#/definitions/UserProfiles",
          "originalRef" : "UserProfiles"
        },
        "ancestors" : {
          "type" : "array",
          "description" : "The ancestors of the user.",
          "items" : {
            "$ref" : "#/definitions/User",
            "originalRef" : "User"
          }
        },
        "customer" : {
          "description" : "The customer belonging to the user.",
          "$ref" : "#/definitions/Customer",
          "originalRef" : "Customer"
        }
      }
    },
    "UserAcl" : {
      "type" : "object",
      "properties" : {
        "functionCode" : {
          "type" : "string"
        },
        "userLocked" : {
          "type" : "boolean"
        },
        "childrenLocked" : {
          "type" : "boolean"
        },
        "effective" : {
          "type" : "boolean"
        },
        "child" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/User",
            "originalRef" : "User"
          }
        },
        "childAdd" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/User",
            "originalRef" : "User"
          }
        },
        "childRem" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/User",
            "originalRef" : "User"
          }
        },
        "restriction" : {
          "$ref" : "#/definitions/UserAclRestrictionConstants",
          "originalRef" : "UserAclRestrictionConstants"
        }
      }
    },
    "UserAclRestrictionConstants" : {
      "type" : "string",
      "enum" : [ "USER_LOCKED", "CHILDREN_LOCKED", "PARENT_LOCK", "NOT_LOCKED" ]
    },
    "UserAcls" : {
      "type" : "object",
      "properties" : {
        "acls" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UserAcl",
            "originalRef" : "UserAcl"
          }
        }
      }
    },
    "UserProfile" : {
      "type" : "object",
      "properties" : {
        "flag" : {
          "$ref" : "#/definitions/UserProfileFlagConstants",
          "originalRef" : "UserProfileFlagConstants"
        },
        "key" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "UserProfileFlagConstants" : {
      "type" : "string",
      "enum" : [ "OPTIONAL", "FIX", "RECURSE", "HIDDEN", "PARENT_FIX" ]
    },
    "UserProfiles" : {
      "type" : "object",
      "properties" : {
        "profiles" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UserProfile",
            "originalRef" : "UserProfile"
          }
        }
      }
    },
    "WorkflowEvent" : {
      "type" : "object",
      "properties" : {
        "vertex" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Lorem Ipsum"
        },
        "type" : {
          "type" : "string",
          "description" : "Lorem Ipsum"
        }
      }
    },
    "Zone" : {
      "type" : "object",
      "required" : [ "origin" ],
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The created date."
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The updated date."
        },
        "origin" : {
          "type" : "string",
          "description" : "Zone name"
        },
        "main" : {
          "description" : "IP address of the zone (A record)",
          "$ref" : "#/definitions/MainIp",
          "originalRef" : "MainIp"
        },
        "soa" : {
          "description" : "Only for ns_action: \"primary\"  and \"complete\"",
          "$ref" : "#/definitions/Soa",
          "originalRef" : "Soa"
        },
        "wwwInclude" : {
          "type" : "boolean",
          "description" : "Automatic generation of resource records \"www\""
        },
        "dnssec" : {
          "type" : "boolean",
          "description" : "Enables dnssec"
        },
        "virtualNameServer" : {
          "type" : "string",
          "description" : "The virtual name server"
        },
        "action" : {
          "description" : "Additional nameserver check is proceeded",
          "$ref" : "#/definitions/NameserverActionConstants",
          "originalRef" : "NameserverActionConstants"
        },
        "nameServerGroup" : {
          "type" : "string",
          "description" : "The name of the name server group, if the zone is managed by"
        },
        "allowTransfer" : {
          "type" : "boolean",
          "description" : "Allow AXFR"
        },
        "owner" : {
          "description" : "The owner of the object",
          "$ref" : "#/definitions/User",
          "originalRef" : "User"
        },
        "updater" : {
          "description" : "The updating user of the object",
          "$ref" : "#/definitions/User",
          "originalRef" : "User"
        },
        "logId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The id of the related log-entry."
        },
        "comment" : {
          "type" : "string",
          "description" : "A custom field"
        },
        "domainsafe" : {
          "type" : "boolean",
          "description" : "true if the domain is represented in the domain safe"
        },
        "source" : {
          "type" : "string",
          "description" : "Nameserver, the zone is copied from via AXFR (for zone_import)"
        },
        "grants" : {
          "type" : "array",
          "description" : "The grants.",
          "items" : {
            "type" : "string"
          }
        },
        "idn" : {
          "type" : "string",
          "description" : "The idn version of the origin."
        },
        "nameServers" : {
          "type" : "array",
          "description" : "List of name servers",
          "items" : {
            "$ref" : "#/definitions/NameServer",
            "originalRef" : "NameServer"
          }
        },
        "freeText" : {
          "type" : "array",
          "description" : "The free text records.",
          "items" : {
            "type" : "string"
          }
        },
        "sourceSystemNs" : {
          "type" : "string",
          "description" : "The source system nameserver."
        },
        "resourceRecords" : {
          "type" : "array",
          "description" : "The resource records.",
          "items" : {
            "$ref" : "#/definitions/ResourceRecord",
            "originalRef" : "ResourceRecord"
          }
        }
      }
    }
  }
}